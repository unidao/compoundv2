{
  "contractName": "CEther",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "comptroller_",
          "type": "address"
        },
        {
          "internalType": "contract InterestRateModel",
          "name": "interestRateModel_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialExchangeRateMantissa_",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        },
        {
          "internalType": "address payable",
          "name": "admin_",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cashPrior",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interestAccumulated",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "AccrueInterest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accountBorrows",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "Borrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "error",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "info",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "detail",
          "type": "uint256"
        }
      ],
      "name": "Failure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "LiquidateBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mintTokens",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ComptrollerInterface",
          "name": "oldComptroller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ComptrollerInterface",
          "name": "newComptroller",
          "type": "address"
        }
      ],
      "name": "NewComptroller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract InterestRateModel",
          "name": "oldInterestRateModel",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract InterestRateModel",
          "name": "newInterestRateModel",
          "type": "address"
        }
      ],
      "name": "NewMarketInterestRateModel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldReserveFactorMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newReserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "NewReserveFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accountBorrows",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "RepayBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "benefactor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "addAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTotalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reduceAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTotalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesReduced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_acceptAdmin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "reduceAmount",
          "type": "uint256"
        }
      ],
      "name": "_reduceReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "newComptroller",
          "type": "address"
        }
      ],
      "name": "_setComptroller",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract InterestRateModel",
          "name": "newInterestRateModel",
          "type": "address"
        }
      ],
      "name": "_setInterestRateModel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "_setPendingAdmin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newReserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "_setReserveFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "accrualBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "accrueInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOfUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "borrowIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "borrowRatePerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "comptroller",
      "outputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "exchangeRateCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exchangeRateStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "comptroller_",
          "type": "address"
        },
        {
          "internalType": "contract InterestRateModel",
          "name": "interestRateModel_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialExchangeRateMantissa_",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "interestRateModel",
      "outputs": [
        {
          "internalType": "contract InterestRateModel",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isCToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveFactorMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "seize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "supplyRatePerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalBorrows",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "totalBorrowsCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        }
      ],
      "name": "redeemUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "repayBorrow",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "repayBorrowBehalf",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "contract CToken",
          "name": "cTokenCollateral",
          "type": "address"
        }
      ],
      "name": "liquidateBorrow",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"comptroller_\",\"type\":\"address\"},{\"internalType\":\"contract InterestRateModel\",\"name\":\"interestRateModel_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialExchangeRateMantissa_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"address payable\",\"name\":\"admin_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashPrior\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestAccumulated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"AccrueInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountBorrows\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"error\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"detail\",\"type\":\"uint256\"}],\"name\":\"Failure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"LiquidateBorrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintTokens\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ComptrollerInterface\",\"name\":\"oldComptroller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ComptrollerInterface\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"NewComptroller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract InterestRateModel\",\"name\":\"oldInterestRateModel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract InterestRateModel\",\"name\":\"newInterestRateModel\",\"type\":\"address\"}],\"name\":\"NewMarketInterestRateModel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldReserveFactorMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"NewReserveFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountBorrows\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"RepayBorrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"benefactor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"addAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reduceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesReduced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reduceAmount\",\"type\":\"uint256\"}],\"name\":\"_reduceReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"_setComptroller\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract InterestRateModel\",\"name\":\"newInterestRateModel\",\"type\":\"address\"}],\"name\":\"_setInterestRateModel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newReserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"_setReserveFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"accrualBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"accrueInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowBalanceCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowBalanceStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"borrowIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"borrowRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"comptroller\",\"outputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exchangeRateCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeRateStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"comptroller_\",\"type\":\"address\"},{\"internalType\":\"contract InterestRateModel\",\"name\":\"interestRateModel_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialExchangeRateMantissa_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"interestRateModel\",\"outputs\":[{\"internalType\":\"contract InterestRateModel\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isCToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract CToken\",\"name\":\"cTokenCollateral\",\"type\":\"address\"}],\"name\":\"liquidateBorrow\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"repayBorrow\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"repayBorrowBehalf\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveFactorMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"seize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supplyRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBorrows\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"totalBorrowsCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Compound\",\"methods\":{\"_acceptAdmin()\":{\"details\":\"Admin function for pending admin to accept role and update admin\",\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"_reduceReserves(uint256)\":{\"params\":{\"reduceAmount\":\"Amount of reduction to reserves\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"_setComptroller(address)\":{\"details\":\"Admin function to set a new comptroller\",\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"_setInterestRateModel(address)\":{\"details\":\"Admin function to accrue interest and update the interest rate model\",\"params\":{\"newInterestRateModel\":\"the new interest rate model to use\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"_setPendingAdmin(address)\":{\"details\":\"Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\",\"params\":{\"newPendingAdmin\":\"New pending admin.\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"_setReserveFactor(uint256)\":{\"details\":\"Admin function to accrue interest and set a new reserve factor\",\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"accrueInterest()\":{\"details\":\"This calculates interest accrued from the last checkpointed block  up to the current block and writes new checkpoint to storage.\"},\"allowance(address,address)\":{\"params\":{\"owner\":\"The address of the account which owns the tokens to be spent\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"The number of tokens allowed to be spent (-1 means infinite)\"},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\",\"params\":{\"amount\":\"The number of tokens that are approved (-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"Whether or not the approval succeeded\"},\"balanceOf(address)\":{\"params\":{\"owner\":\"The address of the account to query\"},\"return\":\"The number of tokens owned by `owner`\"},\"balanceOfUnderlying(address)\":{\"details\":\"This also accrues interest in a transaction\",\"params\":{\"owner\":\"The address of the account to query\"},\"return\":\"The amount of underlying owned by `owner`\"},\"borrow(uint256)\":{\"params\":{\"borrowAmount\":\"The amount of the underlying asset to borrow\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"borrowBalanceCurrent(address)\":{\"params\":{\"account\":\"The address whose balance should be calculated after updating borrowIndex\"},\"return\":\"The calculated balance\"},\"borrowBalanceStored(address)\":{\"params\":{\"account\":\"The address whose balance should be calculated\"},\"return\":\"The calculated balance\"},\"borrowRatePerBlock()\":{\"return\":\"The borrow interest rate per block, scaled by 1e18\"},\"constructor\":{\"params\":{\"admin_\":\"Address of the administrator of this token\",\"comptroller_\":\"The address of the Comptroller\",\"decimals_\":\"ERC-20 decimal precision of this token\",\"initialExchangeRateMantissa_\":\"The initial exchange rate, scaled by 1e18\",\"interestRateModel_\":\"The address of the interest rate model\",\"name_\":\"ERC-20 name of this token\",\"symbol_\":\"ERC-20 symbol of this token\"}},\"exchangeRateCurrent()\":{\"return\":\"Calculated exchange rate scaled by 1e18\"},\"exchangeRateStored()\":{\"details\":\"This function does not accrue interest before calculating the exchange rate\",\"return\":\"Calculated exchange rate scaled by 1e18\"},\"getAccountSnapshot(address)\":{\"details\":\"This is used by comptroller to more efficiently perform liquidity checks.\",\"params\":{\"account\":\"Address of the account to snapshot\"},\"return\":\"(possible error, token balance, borrow balance, exchange rate mantissa)\"},\"getCash()\":{\"return\":\"The quantity of underlying asset owned by this contract\"},\"initialize(address,address,uint256,string,string,uint8)\":{\"params\":{\"comptroller_\":\"The address of the Comptroller\",\"decimals_\":\"EIP-20 decimal precision of this token\",\"initialExchangeRateMantissa_\":\"The initial exchange rate, scaled by 1e18\",\"interestRateModel_\":\"The address of the interest rate model\",\"name_\":\"EIP-20 name of this token\",\"symbol_\":\"EIP-20 symbol of this token\"}},\"liquidateBorrow(address,address)\":{\"details\":\"Reverts upon any failure\",\"params\":{\"borrower\":\"The borrower of this cToken to be liquidated\",\"cTokenCollateral\":\"The market in which to seize collateral from the borrower\"}},\"mint()\":{\"details\":\"Reverts upon any failure\"},\"redeem(uint256)\":{\"details\":\"Accrues interest whether or not the operation succeeds, unless reverted\",\"params\":{\"redeemTokens\":\"The number of cTokens to redeem into underlying\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"redeemUnderlying(uint256)\":{\"details\":\"Accrues interest whether or not the operation succeeds, unless reverted\",\"params\":{\"redeemAmount\":\"The amount of underlying to redeem\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"repayBorrow()\":{\"details\":\"Reverts upon any failure\"},\"repayBorrowBehalf(address)\":{\"details\":\"Reverts upon any failure\",\"params\":{\"borrower\":\"the account with the debt being payed off\"}},\"seize(address,address,uint256)\":{\"details\":\"Will fail unless called by another cToken during the process of liquidation. Its absolutely critical to use msg.sender as the borrowed cToken and not a parameter.\",\"params\":{\"borrower\":\"The account having collateral seized\",\"liquidator\":\"The account receiving seized collateral\",\"seizeTokens\":\"The number of cTokens to seize\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"supplyRatePerBlock()\":{\"return\":\"The supply interest rate per block, scaled by 1e18\"},\"totalBorrowsCurrent()\":{\"return\":\"The total borrows with interest\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"dst\":\"The address of the destination account\"},\"return\":\"Whether or not the transfer succeeded\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"dst\":\"The address of the destination account\",\"src\":\"The address of the source account\"},\"return\":\"Whether or not the transfer succeeded\"}},\"title\":\"Compound's CEther Contract\"},\"userdoc\":{\"methods\":{\"_acceptAdmin()\":{\"notice\":\"Accepts transfer of admin rights. msg.sender must be pendingAdmin\"},\"_reduceReserves(uint256)\":{\"notice\":\"Accrues interest and reduces reserves by transferring to admin\"},\"_setComptroller(address)\":{\"notice\":\"Sets a new comptroller for the market\"},\"_setInterestRateModel(address)\":{\"notice\":\"accrues interest and updates the interest rate model using _setInterestRateModelFresh\"},\"_setPendingAdmin(address)\":{\"notice\":\"Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\"},\"_setReserveFactor(uint256)\":{\"notice\":\"accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh\"},\"accrueInterest()\":{\"notice\":\"Applies accrued interest to total borrows and reserves\"},\"allowance(address,address)\":{\"notice\":\"Get the current allowance from `owner` for `spender`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"balanceOf(address)\":{\"notice\":\"Get the token balance of the `owner`\"},\"balanceOfUnderlying(address)\":{\"notice\":\"Get the underlying balance of the `owner`\"},\"borrow(uint256)\":{\"notice\":\"Sender borrows assets from the protocol to their own address\"},\"borrowBalanceCurrent(address)\":{\"notice\":\"Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex\"},\"borrowBalanceStored(address)\":{\"notice\":\"Return the borrow balance of account based on stored data\"},\"borrowRatePerBlock()\":{\"notice\":\"Returns the current per-block borrow interest rate for this cToken\"},\"constructor\":\"Construct a new CEther money market\",\"exchangeRateCurrent()\":{\"notice\":\"Accrue interest then return the up-to-date exchange rate\"},\"exchangeRateStored()\":{\"notice\":\"Calculates the exchange rate from the underlying to the CToken\"},\"getAccountSnapshot(address)\":{\"notice\":\"Get a snapshot of the account's balances, and the cached exchange rate\"},\"getCash()\":{\"notice\":\"Get cash balance of this cToken in the underlying asset\"},\"initialize(address,address,uint256,string,string,uint8)\":{\"notice\":\"Initialize the money market\"},\"liquidateBorrow(address,address)\":{\"notice\":\"The sender liquidates the borrowers collateral. The collateral seized is transferred to the liquidator.\"},\"mint()\":{\"notice\":\"Sender supplies assets into the market and receives cTokens in exchange\"},\"redeem(uint256)\":{\"notice\":\"Sender redeems cTokens in exchange for the underlying asset\"},\"redeemUnderlying(uint256)\":{\"notice\":\"Sender redeems cTokens in exchange for a specified amount of underlying asset\"},\"repayBorrow()\":{\"notice\":\"Sender repays their own borrow\"},\"repayBorrowBehalf(address)\":{\"notice\":\"Sender repays a borrow belonging to borrower\"},\"seize(address,address,uint256)\":{\"notice\":\"Transfers collateral tokens (this market) to the liquidator.\"},\"supplyRatePerBlock()\":{\"notice\":\"Returns the current per-block supply interest rate for this cToken\"},\"totalBorrowsCurrent()\":{\"notice\":\"Returns the current total borrows plus accrued interest\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"}},\"notice\":\"CToken which wraps Ether\"}},\"settings\":{\"compilationTarget\":{\"/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/CEther.sol\":\"CEther\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/CEther.sol\":{\"keccak256\":\"0x7da356ac7db5db7dea7066e9bc804e9ecab729a74ecdd4fda7e0cc835997e180\",\"urls\":[\"bzz-raw://4120253e5ee17670c114389d190ea724fe98fa959dc99df0cd657840559c7ab1\",\"dweb:/ipfs/QmPPe32FqpBd4MdjXKjVRp85jDHG7LWRyiKrV2W56y8JXE\"]},\"/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/CToken.sol\":{\"keccak256\":\"0x9d7fdb09585d4952a81368ba24804a06ab83b8384e68ef6037323b9f50cb0271\",\"urls\":[\"bzz-raw://dcc8ab5a79d18330e157c5c3992a393d6c703fbe8aa08e9e0f8b34549df16c3e\",\"dweb:/ipfs/QmezMnRJQfkk2QyTNgst2TNk44tMtDnjGexCGfE1J4Yzwf\"]},\"/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/CTokenInterfaces.sol\":{\"keccak256\":\"0x696ff84aeee0434502b58aff67419a943dc7ca87d2579c012d2fc76e622eb9ce\",\"urls\":[\"bzz-raw://92aa73dc7a1c102f5889cb51d826f97725ae0fad5409c2f1f23c742a12b9bb0e\",\"dweb:/ipfs/QmTfM7XDAwrXKsuktqyYi2pprqBcMcdZz3U4wmzQcp2wEV\"]},\"/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/CarefulMath.sol\":{\"keccak256\":\"0x57d6930a0f3d3c17cc2685161c1e71d972c6045807bbd6e657e53aa3b4609408\",\"urls\":[\"bzz-raw://7c0abdf53adebc5b67d9f6bf4f1ade10a27a56e31ed73ec784b28af1d6c98adc\",\"dweb:/ipfs/QmXND9GoV4UH2D48fjZ9WUVyyjUo1LrKjuR4txFNVWX4zd\"]},\"/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/ComptrollerInterface.sol\":{\"keccak256\":\"0xb394539dcd689cfd1c98139ec0083ae3b3bcbde933ce2ab06ef8e2e70c5518fd\",\"urls\":[\"bzz-raw://1bfe93e7ac7375efefe626b90be7d9c6ad170d183962736b7e48ed100bacbd0a\",\"dweb:/ipfs/QmdNxEsLNDrBhPjofUWUvD4AJPa6eVoZ32D9iPChmPAxEu\"]},\"/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/EIP20Interface.sol\":{\"keccak256\":\"0xc8c017c05fa0d904c45934134311a37a6ca130babe03de40c1f34fac0df4ea58\",\"urls\":[\"bzz-raw://2c54944906404b75140fb80702fb1d70894d4425cfb2aef6c78fe83b66628def\",\"dweb:/ipfs/QmYEW1op83F1cdo5nY6dMXyf3EgzbebS6Hczba4F8U3HMr\"]},\"/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/EIP20NonStandardInterface.sol\":{\"keccak256\":\"0x506e70835e98e9ba260a6eb838a10eabc56137b3b557c776d870b5a6af20d020\",\"urls\":[\"bzz-raw://0ddf6fe4b5b39cebcdef76e85a51c7ecbefeaa86ef339f86c63d9007595f3c34\",\"dweb:/ipfs/QmZdwWEmrrJj4rQkFQ1NMnKU2X9mpZYVRTwzDCPbmYWzKg\"]},\"/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/ErrorReporter.sol\":{\"keccak256\":\"0x93e17c2249e72b34fb9ed172d00bf8ae41014669d3cd4b70a37ac4427ad6a134\",\"urls\":[\"bzz-raw://126775a980bf548a4b447475b05c4c5e0720920dafb2b6a18886f4bfa2016418\",\"dweb:/ipfs/QmcHiBmeucUk9kqnZxoPbW7DZmZEWexVWhEYbTFRFmeixX\"]},\"/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/Exponential.sol\":{\"keccak256\":\"0x165bbac812ba99503bbb799437f806cb2508ad05a33c8ba6faf3ce4ed70e792f\",\"urls\":[\"bzz-raw://6e0bd83d282eebfe3695e815cccae3e81c9911ce5af73cd59f1a7eaed740c14e\",\"dweb:/ipfs/QmU6m1RuAH5M399Jjf5CCmeYXUvDytYty6i2w6EVay4ne8\"]},\"/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/InterestRateModel.sol\":{\"keccak256\":\"0xc4cddb183fd07b4c3b985dae4e0f6e7930e8685832f10524786e9b650d9f8f0d\",\"urls\":[\"bzz-raw://ff3fc744c43e6e18a12764ac2413b8e24186872d517d953fd8f05a82c7cc2541\",\"dweb:/ipfs/QmV7SC8KBYe5rbVeyNpobcGmxoW2WGVw6XKtQc3jG5KfU1\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162008f2138038062008f21833981810160405260e08110156200003757600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805160405193929190846401000000008211156200007657600080fd5b838201915060208201858111156200008d57600080fd5b8251866001820283011164010000000082111715620000ab57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000e1578082015181840152602081019050620000c4565b50505050905090810190601f1680156200010f5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200013357600080fd5b838201915060208201858111156200014a57600080fd5b82518660018202830111640100000000821117156200016857600080fd5b8083526020830192505050908051906020019080838360005b838110156200019e57808201518184015260208101905062000181565b50505050905090810190601f168015620001cc5780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291908051906020019092919050505033600360016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620002418787878787876200028f60201b60201c565b80600360016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505062000c13565b600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018062008e886024913960400191505060405180910390fd5b60006009541480156200034c57506000600a54145b620003a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018062008eac6023913960400191505060405180910390fd5b8360078190555060006007541162000407576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018062008ecf6030913960400191505060405180910390fd5b60006200041a87620005ae60201b60201c565b9050600060108111156200042a57fe5b81146200049f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f73657474696e6720636f6d7074726f6c6c6572206661696c656400000000000081525060200191505060405180910390fd5b620004af6200082e60201b60201c565b600981905550670de0b6b3a7640000600a81905550620004d5866200083660201b60201c565b905060006010811115620004e557fe5b81146200053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018062008eff6022913960400191505060405180910390fd5b83600190805190602001906200055692919062000b64565b5082600290805190602001906200056f92919062000b64565b5081600360006101000a81548160ff021916908360ff16021790555060016000806101000a81548160ff02191690831515021790555050505050505050565b6000600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000622576200061a6001603f62000aed60201b60201c565b905062000829565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508273ffffffffffffffffffffffffffffffffffffffff16627e3dd26040518163ffffffff1660e01b815260040160206040518083038186803b1580156200068f57600080fd5b505afa158015620006a4573d6000803e3d6000fd5b505050506040513d6020811015620006bb57600080fd5b81019080805190602001909291905050506200073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6d61726b6572206d6574686f642072657475726e65642066616c73650000000081525060200191505060405180910390fd5b82600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d8184604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600060108111156200082557fe5b9150505b919050565b600043905090565b600080600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620008ac57620008a36001604262000aed60201b60201c565b91505062000ae8565b620008bc6200082e60201b60201c565b60095414620008e257620008d9600a604162000aed60201b60201c565b91505062000ae8565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508273ffffffffffffffffffffffffffffffffffffffff16632191f92a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200094e57600080fd5b505afa15801562000963573d6000803e3d6000fd5b505050506040513d60208110156200097a57600080fd5b8101908080519060200190929190505050620009fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6d61726b6572206d6574686f642072657475726e65642066616c73650000000081525060200191505060405180910390fd5b82600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f9268184604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16000601081111562000ae457fe5b9150505b919050565b60007f45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa083601081111562000b1d57fe5b83605081111562000b2a57fe5b600060405180848152602001838152602001828152602001935050505060405180910390a182601081111562000b5c57fe5b905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000ba757805160ff191683800117855562000bd8565b8280016001018555821562000bd8579182015b8281111562000bd757825182559160200191906001019062000bba565b5b50905062000be7919062000beb565b5090565b62000c1091905b8082111562000c0c57600081600090555060010162000bf2565b5090565b90565b6182658062000c236000396000f3fe6080604052600436106102725760003560e01c806395d89b411161014f578063c37f68e2116100c1578063f2b3abbd1161007a578063f2b3abbd14611003578063f3fdb15a14611068578063f851a440146110bf578063f8f9da2814611116578063fca7820b14611141578063fe9c44ae1461119057610272565b8063c37f68e214610df7578063c5ebeaec14610e71578063db006a7514610ec0578063dd62ed3e14610f0f578063e597461914610f94578063e9c714f214610fd857610272565b8063aa5af0fd11610113578063aa5af0fd14610c1e578063aae40a2a14610c49578063ae9d70b014610cad578063b2a02ff114610cd8578063b71d1a0c14610d67578063bd6d894d14610dcc57610272565b806395d89b41146108d557806395dd91931461096557806399d8c1b4146109ca578063a6afed9514610b80578063a9059cbb14610bab57610272565b80633b1d21a2116101e8578063601a0bf1116101ac578063601a0bf1146107515780636c540baf146107a057806370a08231146107cb57806373acee9814610830578063852a12e31461085b5780638f840ddd146108aa57610272565b80633b1d21a2146106355780634576b5db1461066057806347bd3718146106c55780634e4d9fea146106f05780635fe3b567146106fa57610272565b806318160ddd1161023a57806318160ddd1461045f578063182df0f51461048a57806323b872dd146104b55780632678224714610548578063313ce5671461059f5780633af9e669146105d057610272565b806306fdde03146102c2578063095ea7b3146103525780631249c58b146103c5578063173b9904146103cf57806317bfdfbc146103fa575b600061027d346111bf565b5090506102bf816040518060400160405280600b81526020017f6d696e74206661696c65640000000000000000000000000000000000000000008152506112d0565b50005b3480156102ce57600080fd5b506102d76115b8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103175780820151818401526020810190506102fc565b50505050905090810190601f1680156103445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561035e57600080fd5b506103ab6004803603604081101561037557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611656565b604051808215151515815260200191505060405180910390f35b6103cd61174d565b005b3480156103db57600080fd5b506103e461179d565b6040518082815260200191505060405180910390f35b34801561040657600080fd5b506104496004803603602081101561041d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117a3565b6040518082815260200191505060405180910390f35b34801561046b57600080fd5b506104746118f2565b6040518082815260200191505060405180910390f35b34801561049657600080fd5b5061049f6118f8565b6040518082815260200191505060405180910390f35b3480156104c157600080fd5b5061052e600480360360608110156104d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611980565b604051808215151515815260200191505060405180910390f35b34801561055457600080fd5b5061055d611a5a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105ab57600080fd5b506105b4611a80565b604051808260ff1660ff16815260200191505060405180910390f35b3480156105dc57600080fd5b5061061f600480360360208110156105f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a93565b6040518082815260200191505060405180910390f35b34801561064157600080fd5b5061064a611b9c565b6040518082815260200191505060405180910390f35b34801561066c57600080fd5b506106af6004803603602081101561068357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bab565b6040518082815260200191505060405180910390f35b3480156106d157600080fd5b506106da611e1c565b6040518082815260200191505060405180910390f35b6106f8611e22565b005b34801561070657600080fd5b5061070f611e72565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561075d57600080fd5b5061078a6004803603602081101561077457600080fd5b8101908080359060200190929190505050611e98565b6040518082815260200191505060405180910390f35b3480156107ac57600080fd5b506107b5611f9e565b6040518082815260200191505060405180910390f35b3480156107d757600080fd5b5061081a600480360360208110156107ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fa4565b6040518082815260200191505060405180910390f35b34801561083c57600080fd5b50610845611fed565b6040518082815260200191505060405180910390f35b34801561086757600080fd5b506108946004803603602081101561087e57600080fd5b8101908080359060200190929190505050612134565b6040518082815260200191505060405180910390f35b3480156108b657600080fd5b506108bf612146565b6040518082815260200191505060405180910390f35b3480156108e157600080fd5b506108ea61214c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561092a57808201518184015260208101905061090f565b50505050905090810190601f1680156109575780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561097157600080fd5b506109b46004803603602081101561098857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121ea565b6040518082815260200191505060405180910390f35b3480156109d657600080fd5b50610b7e600480360360c08110156109ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a5457600080fd5b820183602082011115610a6657600080fd5b80359060200191846001830284011164010000000083111715610a8857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610aeb57600080fd5b820183602082011115610afd57600080fd5b80359060200191846001830284011164010000000083111715610b1f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050612275565b005b348015610b8c57600080fd5b50610b9561256c565b6040518082815260200191505060405180910390f35b348015610bb757600080fd5b50610c0460048036036040811015610bce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612a25565b604051808215151515815260200191505060405180910390f35b348015610c2a57600080fd5b50610c33612afe565b6040518082815260200191505060405180910390f35b610cab60048036036040811015610c5f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b04565b005b348015610cb957600080fd5b50610cc2612b58565b6040518082815260200191505060405180910390f35b348015610ce457600080fd5b50610d5160048036036060811015610cfb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612c32565b6040518082815260200191505060405180910390f35b348015610d7357600080fd5b50610db660048036036020811015610d8a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612cfe565b6040518082815260200191505060405180910390f35b348015610dd857600080fd5b50610de1612e7d565b6040518082815260200191505060405180910390f35b348015610e0357600080fd5b50610e4660048036036020811015610e1a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612fc9565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b348015610e7d57600080fd5b50610eaa60048036036020811015610e9457600080fd5b81019080803590602001909291905050506130f1565b6040518082815260200191505060405180910390f35b348015610ecc57600080fd5b50610ef960048036036020811015610ee357600080fd5b8101908080359060200190929190505050613103565b6040518082815260200191505060405180910390f35b348015610f1b57600080fd5b50610f7e60048036036040811015610f3257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613115565b6040518082815260200191505060405180910390f35b610fd660048036036020811015610faa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061319c565b005b348015610fe457600080fd5b50610fed6131ee565b6040518082815260200191505060405180910390f35b34801561100f57600080fd5b506110526004803603602081101561102657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061350b565b6040518082815260200191505060405180910390f35b34801561107457600080fd5b5061107d61355b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156110cb57600080fd5b506110d4613581565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561112257600080fd5b5061112b6135a7565b6040518082815260200191505060405180910390f35b34801561114d57600080fd5b5061117a6004803603602081101561116457600080fd5b8101908080359060200190929190505050613677565b6040518082815260200191505060405180910390f35b34801561119c57600080fd5b506111a561377d565b604051808215151515815260200191505060405180910390f35b6000806000809054906101000a900460ff16611243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff021916908315150217905550600061126761256c565b90506000601081111561127657fe5b81146112a15761129281601081111561128b57fe5b601e613782565b600080905092509250506112b1565b6112ab33856137f6565b92509250505b60016000806101000a81548160ff021916908315150217905550915091565b600060108111156112dd57fe5b8214156112e9576115b4565b606060058251016040519080825280601f01601f1916602001820160405280156113225781602001600182028038833980820191505090505b50905060008090505b82518110156113935782818151811061134057fe5b602001015160f81c60f81b82828151811061135757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061132b565b602060f81b8260008301815181106113a757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350602860f81b8260018301815181106113ea57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a848161142357fe5b0460300160f81b82600283018151811061143957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a848161147257fe5b0660300160f81b82600383018151811061148857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350602960f81b8260048301815181106114cb57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000601081111561150757fe5b841482906115b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561157557808201518184015260208101905061155a565b50505050905090810190601f1680156115a25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050505b5050565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561164e5780601f106116235761010080835404028352916020019161164e565b820191906000526020600020905b81548152906001019060200180831161163157829003601f168201915b505050505081565b60008033905082600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a3600191505092915050565b6000611758346111bf565b50905061179a816040518060400160405280600b81526020017f6d696e74206661696c65640000000000000000000000000000000000000000008152506112d0565b50565b60085481565b60008060009054906101000a900460ff16611826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff0219169083151502179055506000601081111561184d57fe5b61185561256c565b146118c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f61636372756520696e746572657374206661696c65640000000000000000000081525060200191505060405180910390fd5b6118d1826121ea565b905060016000806101000a81548160ff021916908315150217905550919050565b600d5481565b6000806000611905613ec4565b915091506000600381111561191657fe5b82600381111561192257fe5b14611978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603581526020018061817c6035913960400191505060405180910390fd5b809250505090565b60008060009054906101000a900460ff16611a03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff02191690831515021790555060006010811115611a2a57fe5b611a3633868686613fa0565b14905060016000806101000a81548160ff0219169083151502179055509392505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900460ff1681565b6000611a9d617df6565b6040518060200160405280611ab0612e7d565b8152509050600080611b0183600e60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614673565b9150915060006003811115611b1257fe5b826003811115611b1e57fe5b14611b91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f62616c616e636520636f756c64206e6f742062652063616c63756c617465640081525060200191505060405180910390fd5b809350505050919050565b6000611ba66146d6565b905090565b6000600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c1557611c0e6001603f613782565b9050611e17565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508273ffffffffffffffffffffffffffffffffffffffff16627e3dd26040518163ffffffff1660e01b815260040160206040518083038186803b158015611c8157600080fd5b505afa158015611c95573d6000803e3d6000fd5b505050506040513d6020811015611cab57600080fd5b8101908080519060200190929190505050611d2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6d61726b6572206d6574686f642072657475726e65642066616c73650000000081525060200191505060405180910390fd5b82600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d8184604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a160006010811115611e1357fe5b9150505b919050565b600b5481565b6000611e2d34614714565b509050611e6f816040518060400160405280601281526020017f7265706179426f72726f77206661696c656400000000000000000000000000008152506112d0565b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900460ff16611f1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff0219169083151502179055506000611f3f61256c565b905060006010811115611f4e57fe5b8114611f7257611f6a816010811115611f6357fe5b6030613782565b915050611f7f565b611f7b83614826565b9150505b60016000806101000a81548160ff021916908315150217905550919050565b60095481565b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900460ff16612070576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff0219169083151502179055506000601081111561209757fe5b61209f61256c565b14612112576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f61636372756520696e746572657374206661696c65640000000000000000000081525060200191505060405180910390fd5b600b54905060016000806101000a81548160ff02191690831515021790555090565b600061213f82614a37565b9050919050565b600c5481565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121e25780601f106121b7576101008083540402835291602001916121e2565b820191906000526020600020905b8154815290600101906020018083116121c557829003601f168201915b505050505081565b60008060006121f884614b40565b915091506000600381111561220957fe5b82600381111561221557fe5b1461226b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806180a76037913960400191505060405180910390fd5b8092505050919050565b600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461231b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180617fe36024913960400191505060405180910390fd5b600060095414801561232f57506000600a54145b612384576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806180076023913960400191505060405180910390fd5b836007819055506000600754116123e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061802a6030913960400191505060405180910390fd5b60006123f187611bab565b90506000601081111561240057fe5b8114612474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f73657474696e6720636f6d7074726f6c6c6572206661696c656400000000000081525060200191505060405180910390fd5b61247c614c4b565b600981905550670de0b6b3a7640000600a8190555061249a86614c53565b9050600060108111156124a957fe5b8114612500576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061805a6022913960400191505060405180910390fd5b8360019080519060200190612516929190617e09565b50826002908051906020019061252d929190617e09565b5081600360006101000a81548160ff021916908360ff16021790555060016000806101000a81548160ff02191690831515021790555050505050505050565b600080612577614c4b565b9050600060095490508181141561259e576000601081111561259557fe5b92505050612a22565b60006125a86146d6565b90506000600b5490506000600c5490506000600a5490506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166315f240538686866040518463ffffffff1660e01b815260040180848152602001838152602001828152602001935050505060206040518083038186803b15801561264457600080fd5b505afa158015612658573d6000803e3d6000fd5b505050506040513d602081101561266e57600080fd5b8101908080519060200190929190505050905065048c273950008111156126fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f626f72726f772072617465206973206162737572646c7920686967680000000081525060200191505060405180910390fd5b60008061270a8989614ee9565b915091506000600381111561271b57fe5b82600381111561272757fe5b1461279a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f636f756c64206e6f742063616c63756c61746520626c6f636b2064656c74610081525060200191505060405180910390fd5b6127a2617df6565b6000806000806127c060405180602001604052808a81525087614f14565b8096508198505050600060038111156127d557fe5b8760038111156127e157fe5b14612813576127fe600960068960038111156127f957fe5b614f92565b9e505050505050505050505050505050612a22565b61281d858c614673565b80955081985050506000600381111561283257fe5b87600381111561283e57fe5b146128705761285b6009600189600381111561285657fe5b614f92565b9e505050505050505050505050505050612a22565b61287a848c615006565b80945081985050506000600381111561288f57fe5b87600381111561289b57fe5b146128cd576128b8600960048960038111156128b357fe5b614f92565b9e505050505050505050505050505050612a22565b6128e86040518060200160405280600854815250858c615038565b8093508198505050600060038111156128fd57fe5b87600381111561290957fe5b1461293b576129266009600589600381111561292157fe5b614f92565b9e505050505050505050505050505050612a22565b612946858a8b615038565b80925081985050506000600381111561295b57fe5b87600381111561296757fe5b14612999576129846009600389600381111561297f57fe5b614f92565b9e505050505050505050505050505050612a22565b8d60098190555080600a8190555082600b8190555081600c819055507f4dec04e750ca11537cabcd8a9eab06494de08da3735bc8871cd41250e190bc048c8583866040518085815260200184815260200183815260200182815260200194505050505060405180910390a160006010811115612a1157fe5b9e5050505050505050505050505050505b90565b60008060009054906101000a900460ff16612aa8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff02191690831515021790555060006010811115612acf57fe5b612adb33338686613fa0565b14905060016000806101000a81548160ff02191690831515021790555092915050565b600a5481565b6000612b118334846150a3565b509050612b53816040518060400160405280601681526020017f6c6971756964617465426f72726f77206661696c6564000000000000000000008152506112d0565b505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b8168816612ba06146d6565b600b54600c546008546040518563ffffffff1660e01b81526004018085815260200184815260200183815260200182815260200194505050505060206040518083038186803b158015612bf257600080fd5b505afa158015612c06573d6000803e3d6000fd5b505050506040513d6020811015612c1c57600080fd5b8101908080519060200190929190505050905090565b60008060009054906101000a900460ff16612cb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff021916908315150217905550612cdb33858585615276565b905060016000806101000a81548160ff0219169083151502179055509392505050565b6000600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612d6857612d6160016045613782565b9050612e78565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a98184604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a160006010811115612e7457fe5b9150505b919050565b60008060009054906101000a900460ff16612f00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff02191690831515021790555060006010811115612f2757fe5b612f2f61256c565b14612fa2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f61636372756520696e746572657374206661696c65640000000000000000000081525060200191505060405180910390fd5b612faa6118f8565b905060016000806101000a81548160ff02191690831515021790555090565b6000806000806000600e60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600080600061302189614b40565b80945081925050506000600381111561303657fe5b81600381111561304257fe5b14613073576009601081111561305457fe5b60008060008292508191508090509750975097509750505050506130ea565b61307b613ec4565b80935081925050506000600381111561309057fe5b81600381111561309c57fe5b146130cd57600960108111156130ae57fe5b60008060008292508191508090509750975097509750505050506130ea565b600060108111156130da57fe5b8484849750975097509750505050505b9193509193565b60006130fc826157ef565b9050919050565b600061310e826158f6565b9050919050565b6000600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006131a882346159ff565b5090506131ea816040518060400160405280601881526020017f7265706179426f72726f77426568616c66206661696c656400000000000000008152506112d0565b5050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806132795750600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b156132915761328a60016000613782565b9050613508565b6000600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc82600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a17fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a981600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16000601081111561350357fe5b925050505b90565b60008061351661256c565b90506000601081111561352557fe5b81146135495761354181601081111561353a57fe5b6040613782565b915050613556565b61355283614c53565b9150505b919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166315f240536135ef6146d6565b600b54600c546040518463ffffffff1660e01b815260040180848152602001838152602001828152602001935050505060206040518083038186803b15801561363757600080fd5b505afa15801561364b573d6000803e3d6000fd5b505050506040513d602081101561366157600080fd5b8101908080519060200190929190505050905090565b60008060009054906101000a900460ff166136fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff021916908315150217905550600061371e61256c565b90506000601081111561372d57fe5b81146137515761374981601081111561374257fe5b6046613782565b91505061375e565b61375a83615b13565b9150505b60016000806101000a81548160ff021916908315150217905550919050565b600181565b60007f45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa08360108111156137b157fe5b8360508111156137bd57fe5b600060405180848152602001838152602001828152602001935050505060405180910390a18260108111156137ee57fe5b905092915050565b6000806000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634ef4c3e13087876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156138d857600080fd5b505af11580156138ec573d6000803e3d6000fd5b505050506040513d602081101561390257600080fd5b81019080805190602001909291905050509050600081146139395761392a6003601f83614f92565b60008090509250925050613ebd565b613941614c4b565b6009541461396457613955600a6022613782565b60008090509250925050613ebd565b61396c617e89565b613974613ec4565b82602001836040018281525082600381111561398c57fe5b600381111561399757fe5b8152505050600060038111156139a957fe5b816020015160038111156139b957fe5b146139ea576139da60096021836020015160038111156139d557fe5b614f92565b6000809050935093505050613ebd565b6139f48686615c26565b8160c0018181525050613a1d8160c0015160405180602001604052808460400151815250615d47565b826020018360600182815250826003811115613a3557fe5b6003811115613a4057fe5b815250505060006003811115613a5257fe5b81602001516003811115613a6257fe5b14613ad5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4d494e545f45584348414e47455f43414c43554c4154494f4e5f4641494c454481525060200191505060405180910390fd5b613ae5600d548260600151615006565b826020018360800182815250826003811115613afd57fe5b6003811115613b0857fe5b815250505060006003811115613b1a57fe5b81602001516003811115613b2a57fe5b14613b80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806181b16028913960400191505060405180910390fd5b613bcd600e60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548260600151615006565b826020018360a00182815250826003811115613be557fe5b6003811115613bf057fe5b815250505060006003811115613c0257fe5b81602001516003811115613c1257fe5b14613c68576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061807c602b913960400191505060405180910390fd5b8060800151600d819055508060a00151600e60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f868260c001518360600151604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a18573ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83606001516040518082815260200191505060405180910390a3600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341c728b930888460c0015185606001516040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001945050505050600060405180830381600087803b158015613e8c57600080fd5b505af1158015613ea0573d6000803e3d6000fd5b5050505060006010811115613eb157fe5b8160c001519350935050505b9250929050565b6000806000600d5490506000811415613ee65760006007549250925050613f9c565b6000613ef06146d6565b90506000613efc617df6565b6000613f0d84600b54600c54615daa565b809450819250505060006003811115613f2257fe5b816003811115613f2e57fe5b14613f4757806000809050965096505050505050613f9c565b613f518386615e06565b809350819250505060006003811115613f6657fe5b816003811115613f7257fe5b14613f8b57806000809050965096505050505050613f9c565b600082600001519650965050505050505b9091565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdcdc258308787876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050602060405180830381600087803b1580156140b457600080fd5b505af11580156140c8573d6000803e3d6000fd5b505050506040513d60208110156140de57600080fd5b810190808051906020019092919050505090506000811461410e576141066003604a83614f92565b91505061466b565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156141565761414e6002604b613782565b91505061466b565b60008090508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156141b7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050614237565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b6000806000806142478589614ee9565b80945081955050506000600381111561425c57fe5b84600381111561426857fe5b14614286576142796009604b613782565b965050505050505061466b565b6142cf600e60008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205489614ee9565b8093508195505050600060038111156142e457fe5b8460038111156142f057fe5b1461430e576143016009604c613782565b965050505050505061466b565b614357600e60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205489615006565b80925081955050506000600381111561436c57fe5b84600381111561437857fe5b14614396576143896009604d613782565b965050505050505061466b565b81600e60008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600e60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85146144c75782600f60008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8a6040518082815260200191505060405180910390a3600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a56947e308c8c8c6040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b15801561463d57600080fd5b505af1158015614651573d6000803e3d6000fd5b505050506000601081111561466257fe5b96505050505050505b949350505050565b6000806000614680617df6565b61468a8686614f14565b915091506000600381111561469b57fe5b8260038111156146a757fe5b146146bd578160008090509350935050506146cf565b60006146c882615eda565b9350935050505b9250929050565b60008060006146e54734614ee9565b91509150600060038111156146f657fe5b82600381111561470257fe5b1461470c57600080fd5b809250505090565b6000806000809054906101000a900460ff16614798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff02191690831515021790555060006147bc61256c565b9050600060108111156147cb57fe5b81146147f6576147e78160108111156147e057fe5b6036613782565b60008090509250925050614807565b614801333386615ef9565b92509250505b60016000806101000a81548160ff021916908315150217905550915091565b600080600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146148925761488a60016031613782565b915050614a32565b61489a614c4b565b600954146148b6576148ae600a6033613782565b915050614a32565b826148bf6146d6565b10156148d9576148d1600e6032613782565b915050614a32565b600c548311156148f7576148ef60026034613782565b915050614a32565b82600c54039050600c54811115614959576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061820d6024913960400191505060405180910390fd5b80600c8190555061498c600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846165d7565b7f3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168483604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a160006010811115614a2e57fe5b9150505b919050565b60008060009054906101000a900460ff16614aba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff0219169083151502179055506000614ade61256c565b905060006010811115614aed57fe5b8114614b1157614b09816010811115614b0257fe5b6027613782565b915050614b21565b614b1d33600085616622565b9150505b60016000806101000a81548160ff021916908315150217905550919050565b600080600080600080601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541415614baa576000808090509550955050505050614c46565b614bba8160000154600a54616d65565b809450819550505060006003811115614bcf57fe5b846003811115614bdb57fe5b14614bf3578360008090509550955050505050614c46565b614c01838260010154616db8565b809350819550505060006003811115614c1657fe5b846003811115614c2257fe5b14614c3a578360008090509550955050505050614c46565b60008295509550505050505b915091565b600043905090565b600080600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614614cbf57614cb760016042613782565b915050614ee4565b614cc7614c4b565b60095414614ce357614cdb600a6041613782565b915050614ee4565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508273ffffffffffffffffffffffffffffffffffffffff16632191f92a6040518163ffffffff1660e01b815260040160206040518083038186803b158015614d4e57600080fd5b505afa158015614d62573d6000803e3d6000fd5b505050506040513d6020811015614d7857600080fd5b8101908080519060200190929190505050614dfb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6d61726b6572206d6574686f642072657475726e65642066616c73650000000081525060200191505060405180910390fd5b82600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f9268184604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a160006010811115614ee057fe5b9150505b919050565b600080838311614f0157600083850391509150614f0d565b60036000809050915091505b9250929050565b6000614f1e617df6565b600080614f2f866000015186616d65565b9150915060006003811115614f4057fe5b826003811115614f4c57fe5b14614f70578160405180602001604052806000815250809050935093505050614f8b565b60006040518060200160405280838152508090509350935050505b9250929050565b60007f45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0846010811115614fc157fe5b846050811115614fcd57fe5b8460405180848152602001838152602001828152602001935050505060405180910390a1836010811115614ffd57fe5b90509392505050565b60008060008385019050848110615024576000819250925050615031565b6002600080905092509250505b9250929050565b6000806000615045617df6565b61504f8787614f14565b915091506000600381111561506057fe5b82600381111561506c57fe5b146150825781600080905093509350505061509b565b61509461508e82615eda565b86615006565b9350935050505b935093915050565b6000806000809054906101000a900460ff16615127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff021916908315150217905550600061514b61256c565b90506000601081111561515a57fe5b81146151855761517681601081111561516f57fe5b600f613782565b60008090509250925050615254565b8373ffffffffffffffffffffffffffffffffffffffff1663a6afed956040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156151cd57600080fd5b505af11580156151e1573d6000803e3d6000fd5b505050506040513d60208110156151f757600080fd5b810190808051906020019092919050505090506000601081111561521757fe5b81146152425761523381601081111561522c57fe5b6010613782565b60008090509250925050615254565b61524e33878787616dec565b92509250505b60016000806101000a81548160ff021916908315150217905550935093915050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d02f735130888888886040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200195505050505050602060405180830381600087803b1580156153be57600080fd5b505af11580156153d2573d6000803e3d6000fd5b505050506040513d60208110156153e857600080fd5b8101908080519060200190929190505050905060008114615418576154106003601b83614f92565b9150506157e7565b8473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415615460576154586006601c613782565b9150506157e7565b60008060006154ae600e60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205487614ee9565b8093508194505050600060038111156154c357fe5b8360038111156154cf57fe5b146154f7576154ec6009601a8560038111156154e757fe5b614f92565b9450505050506157e7565b615540600e60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205487615006565b80925081945050506000600381111561555557fe5b83600381111561556157fe5b146155895761557e6009601985600381111561557957fe5b614f92565b9450505050506157e7565b81600e60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600e60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508773ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef886040518082815260200191505060405180910390a3600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636d35bf91308b8b8b8b6040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200195505050505050600060405180830381600087803b1580156157bb57600080fd5b505af11580156157cf573d6000803e3d6000fd5b50505050600060108111156157e057fe5b9450505050505b949350505050565b60008060009054906101000a900460ff16615872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff021916908315150217905550600061589661256c565b9050600060108111156158a557fe5b81146158c9576158c18160108111156158ba57fe5b6008613782565b9150506158d7565b6158d33384617849565b9150505b60016000806101000a81548160ff021916908315150217905550919050565b60008060009054906101000a900460ff16615979576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff021916908315150217905550600061599d61256c565b9050600060108111156159ac57fe5b81146159d0576159c88160108111156159c157fe5b6027613782565b9150506159e0565b6159dc33846000616622565b9150505b60016000806101000a81548160ff021916908315150217905550919050565b6000806000809054906101000a900460ff16615a83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f72652d656e74657265640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff0219169083151502179055506000615aa761256c565b905060006010811115615ab657fe5b8114615ae157615ad2816010811115615acb57fe5b6035613782565b60008090509250925050615af2565b615aec338686615ef9565b92509250505b60016000806101000a81548160ff0219169083151502179055509250929050565b6000600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614615b7d57615b7660016047613782565b9050615c21565b615b85614c4b565b60095414615ba057615b99600a6048613782565b9050615c21565b670de0b6b3a7640000821115615bc357615bbc60026049613782565b9050615c21565b60006008549050826008819055507faaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f8214608184604051808381526020018281526020019250505060405180910390a160006010811115615c1d57fe5b9150505b919050565b60008273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614615cc9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f73656e646572206d69736d61746368000000000000000000000000000000000081525060200191505060405180910390fd5b813414615d3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f76616c7565206d69736d6174636800000000000000000000000000000000000081525060200191505060405180910390fd5b81905092915050565b6000806000615d54617df6565b615d5e8686617d7a565b9150915060006003811115615d6f57fe5b826003811115615d7b57fe5b14615d9157816000809050935093505050615da3565b6000615d9c82615eda565b9350935050505b9250929050565b600080600080615dba8787615006565b9150915060006003811115615dcb57fe5b826003811115615dd757fe5b14615ded57816000809050935093505050615dfe565b615df78186614ee9565b9350935050505b935093915050565b6000615e10617df6565b600080615e2586670de0b6b3a7640000616d65565b9150915060006003811115615e3657fe5b826003811115615e4257fe5b14615e66578160405180602001604052806000815250809050935093505050615ed3565b600080615e738388616db8565b9150915060006003811115615e8457fe5b826003811115615e9057fe5b14615eb65781604051806020016040528060008152508090509550955050505050615ed3565b600060405180602001604052808381525080905095509550505050505b9250929050565b6000670de0b6b3a7640000826000015181615ef157fe5b049050919050565b6000806000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324008a62308888886040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050602060405180830381600087803b15801561600f57600080fd5b505af1158015616023573d6000803e3d6000fd5b505050506040513d602081101561603957600080fd5b8101908080519060200190929190505050905060008114616070576160616003603883614f92565b600080905092509250506165cf565b616078614c4b565b6009541461609b5761608c600a6039613782565b600080905092509250506165cf565b6160a3617edc565b601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548160600181815250506160f886614b40565b82602001836080018281525082600381111561611057fe5b600381111561611b57fe5b81525050506000600381111561612d57fe5b8160200151600381111561613d57fe5b1461616e5761615e600960378360200151600381111561615957fe5b614f92565b60008090509350935050506165cf565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8514156161a95780608001518160400181815250506161b4565b848160400181815250505b6161c2878260400151615c26565b8160e00181815250506161dd81608001518260e00151614ee9565b826020018360a001828152508260038111156161f557fe5b600381111561620057fe5b81525050506000600381111561621257fe5b8160200151600381111561622257fe5b14616278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806180de603a913960400191505060405180910390fd5b616288600b548260e00151614ee9565b826020018360c001828152508260038111156162a057fe5b60038111156162ab57fe5b8152505050600060038111156162bd57fe5b816020015160038111156162cd57fe5b14616323576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806181186031913960400191505060405180910390fd5b8060a00151601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600a54601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055508060c00151600b819055507f1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a187878360e001518460a001518560c00151604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019550505050505060405180910390a1600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ededc913089898560e0015186606001516040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200195505050505050600060405180830381600087803b15801561659e57600080fd5b505af11580156165b2573d6000803e3d6000fd5b50505050600060108111156165c357fe5b8160e001519350935050505b935093915050565b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561661d573d6000803e3d6000fd5b505050565b6000808314806166325750600082145b616687576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806181d96034913960400191505060405180910390fd5b61668f617f37565b616697613ec4565b8260200183604001828152508260038111156166af57fe5b60038111156166ba57fe5b8152505050600060038111156166cc57fe5b816020015160038111156166dc57fe5b14616705576166fd6009602b836020015160038111156166f857fe5b614f92565b915050616d5e565b60008411156167a757838160600181815250506167346040518060200160405280836040015181525085614673565b82602001836080018281525082600381111561674c57fe5b600381111561675757fe5b81525050506000600381111561676957fe5b8160200151600381111561677957fe5b146167a25761679a600960298360200151600381111561679557fe5b614f92565b915050616d5e565b61683c565b6167c38360405180602001604052808460400151815250615d47565b8260200183606001828152508260038111156167db57fe5b60038111156167e657fe5b8152505050600060038111156167f857fe5b8160200151600381111561680857fe5b14616831576168296009602a8360200151600381111561682457fe5b614f92565b915050616d5e565b828160800181815250505b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eabe7d91308885606001516040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561691f57600080fd5b505af1158015616933573d6000803e3d6000fd5b505050506040513d602081101561694957600080fd5b810190808051906020019092919050505090506000811461697a576169716003602883614f92565b92505050616d5e565b616982614c4b565b6009541461699f57616996600a602c613782565b92505050616d5e565b6169af600d548360600151614ee9565b836020018460a001828152508260038111156169c757fe5b60038111156169d257fe5b8152505050600060038111156169e457fe5b826020015160038111156169f457fe5b14616a1e57616a156009602e84602001516003811115616a1057fe5b614f92565b92505050616d5e565b616a6b600e60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548360600151614ee9565b836020018460c00182815250826003811115616a8357fe5b6003811115616a8e57fe5b815250505060006003811115616aa057fe5b82602001516003811115616ab057fe5b14616ada57616ad16009602d84602001516003811115616acc57fe5b614f92565b92505050616d5e565b8160800151616ae76146d6565b1015616b0257616af9600e602f613782565b92505050616d5e565b616b108683608001516165d7565b8160a00151600d819055508160c00151600e60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84606001516040518082815260200191505060405180910390a37fe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a9298683608001518460600151604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351dff9893088856080015186606001516040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001945050505050600060405180830381600087803b158015616d3457600080fd5b505af1158015616d48573d6000803e3d6000fd5b5050505060006010811115616d5957fe5b925050505b9392505050565b6000806000841415616d805760008080905091509150616db1565b6000838502905083858281616d9157fe5b0414616da857600260008090509250925050616db1565b60008192509250505b9250929050565b6000806000831415616dd4576001600080905091509150616de5565b6000838581616ddf57fe5b04915091505b9250929050565b6000806000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fc7e71e30868a8a8a6040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200195505050505050602060405180830381600087803b158015616f3657600080fd5b505af1158015616f4a573d6000803e3d6000fd5b505050506040513d6020811015616f6057600080fd5b8101908080519060200190929190505050905060008114616f9757616f886003601283614f92565b60008090509250925050617840565b616f9f614c4b565b60095414616fc257616fb3600a6016613782565b60008090509250925050617840565b616fca614c4b565b8473ffffffffffffffffffffffffffffffffffffffff16636c540baf6040518163ffffffff1660e01b815260040160206040518083038186803b15801561701057600080fd5b505afa158015617024573d6000803e3d6000fd5b505050506040513d602081101561703a57600080fd5b81019080805190602001909291905050501461706b5761705c600a6011613782565b60008090509250925050617840565b8673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156170ba576170ab60066017613782565b60008090509250925050617840565b60008514156170de576170cf60076015613782565b60008090509250925050617840565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8514156171215761711260076014613782565b60008090509250925050617840565b60008061712f898989615ef9565b915091506000601081111561714057fe5b821461716d5761715c82601081111561715557fe5b6018613782565b600080905094509450505050617840565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c488847b308a866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604080518083038186803b15801561724a57600080fd5b505afa15801561725e573d6000803e3d6000fd5b505050506040513d604081101561727457600080fd5b81019080805190602001909291908051906020019092919050505091509150600060108111156172a057fe5b82146172f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806181496033913960400191505060405180910390fd5b808873ffffffffffffffffffffffffffffffffffffffff166370a082318c6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561737557600080fd5b505afa158015617389573d6000803e3d6000fd5b505050506040513d602081101561739f57600080fd5b81019080805190602001909291905050501015617424576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4c49515549444154455f5345495a455f544f4f5f4d554348000000000000000081525060200191505060405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16141561746d57617466308d8d85615276565b9050617566565b8873ffffffffffffffffffffffffffffffffffffffff1663b2a02ff18d8d856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561752857600080fd5b505af115801561753c573d6000803e3d6000fd5b505050506040513d602081101561755257600080fd5b810190808051906020019092919050505090505b6000601081111561757357fe5b81146175e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f746f6b656e207365697a757265206661696c656400000000000000000000000081525060200191505060405180910390fd5b7f298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb528c8c868c86604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019550505050505060405180910390a1600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166347ef3b3b308b8f8f89886040518763ffffffff1660e01b8152600401808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b15801561780f57600080fd5b505af1158015617823573d6000803e3d6000fd5b505050506000601081111561783457fe5b84975097505050505050505b94509492505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663da3d454c3086866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561792957600080fd5b505af115801561793d573d6000803e3d6000fd5b505050506040513d602081101561795357600080fd5b81019080805190602001909291905050509050600081146179835761797b6003600e83614f92565b915050617d74565b61798b614c4b565b600954146179a65761799e600a80613782565b915050617d74565b826179af6146d6565b10156179c9576179c1600e6009613782565b915050617d74565b6179d1617f8a565b6179da85614b40565b8260000183602001828152508260038111156179f257fe5b60038111156179fd57fe5b815250505060006003811115617a0f57fe5b81600001516003811115617a1f57fe5b14617a4957617a406009600783600001516003811115617a3b57fe5b614f92565b92505050617d74565b617a57816020015185615006565b826000018360400182815250826003811115617a6f57fe5b6003811115617a7a57fe5b815250505060006003811115617a8c57fe5b81600001516003811115617a9c57fe5b14617ac657617abd6009600c83600001516003811115617ab857fe5b614f92565b92505050617d74565b617ad2600b5485615006565b826000018360600182815250826003811115617aea57fe5b6003811115617af557fe5b815250505060006003811115617b0757fe5b81600001516003811115617b1757fe5b14617b4157617b386009600b83600001516003811115617b3357fe5b614f92565b92505050617d74565b617b4b85856165d7565b8060400151601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600a54601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055508060600151600b819055507f13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80858583604001518460600151604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390a1600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c7786053087876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b158015617d4a57600080fd5b505af1158015617d5e573d6000803e3d6000fd5b5050505060006010811115617d6f57fe5b925050505b92915050565b6000617d84617df6565b600080617d99670de0b6b3a764000087616d65565b9150915060006003811115617daa57fe5b826003811115617db657fe5b14617dda578160405180602001604052806000815250809050935093505050617def565b617de8818660000151615e06565b9350935050505b9250929050565b6040518060200160405280600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10617e4a57805160ff1916838001178555617e78565b82800160010185558215617e78579182015b82811115617e77578251825591602001919060010190617e5c565b5b509050617e859190617fbd565b5090565b6040518060e0016040528060006010811115617ea157fe5b815260200160006003811115617eb357fe5b815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610100016040528060006010811115617ef557fe5b815260200160006003811115617f0757fe5b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060e0016040528060006010811115617f4f57fe5b815260200160006003811115617f6157fe5b815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806080016040528060006003811115617fa257fe5b81526020016000815260200160008152602001600081525090565b617fdf91905b80821115617fdb576000816000905550600101617fc3565b5090565b9056fe6f6e6c792061646d696e206d617920696e697469616c697a6520746865206d61726b65746d61726b6574206d6179206f6e6c7920626520696e697469616c697a6564206f6e6365696e697469616c2065786368616e67652072617465206d7573742062652067726561746572207468616e207a65726f2e73657474696e6720696e7465726573742072617465206d6f64656c206661696c65644d494e545f4e45575f4143434f554e545f42414c414e43455f43414c43554c4154494f4e5f4641494c4544626f72726f7742616c616e636553746f7265643a20626f72726f7742616c616e636553746f726564496e7465726e616c206661696c656452455041595f424f52524f575f4e45575f4143434f554e545f424f52524f575f42414c414e43455f43414c43554c4154494f4e5f4641494c454452455041595f424f52524f575f4e45575f544f54414c5f42414c414e43455f43414c43554c4154494f4e5f4641494c45444c49515549444154455f434f4d5054524f4c4c45525f43414c43554c4154455f414d4f554e545f5345495a455f4641494c454465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65644d494e545f4e45575f544f54414c5f535550504c595f43414c43554c4154494f4e5f4641494c45446f6e65206f662072656465656d546f6b656e73496e206f722072656465656d416d6f756e74496e206d757374206265207a65726f72656475636520726573657276657320756e657870656374656420756e646572666c6f77a265627a7a72315820bf32cb58fdbf54912b9c50514eb60d268fd385e3d981f3a348e037d952eecacb64736f6c634300051100326f6e6c792061646d696e206d617920696e697469616c697a6520746865206d61726b65746d61726b6574206d6179206f6e6c7920626520696e697469616c697a6564206f6e6365696e697469616c2065786368616e67652072617465206d7573742062652067726561746572207468616e207a65726f2e73657474696e6720696e7465726573742072617465206d6f64656c206661696c6564",
  "deployedBytecode": "",
  "sourceMap": "160:6160:5:-;;;708:624;8:9:-1;5:2;;;30:1;27;20:12;5:2;708:624:5;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;708:624:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;708:624:5;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;708:624:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;708:624:5;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;708:624:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1108:10;1100:5;;:18;;;;;;;;;;;;;;;;;;1131:101;1142:12;1156:18;1176:28;1206:5;1213:7;1222:9;1131:10;;;:101;;:::i;:::-;1318:6;1310:5;;:14;;;;;;;;;;;;;;;;;;708:624;;;;;;;160:6160;;896:1529:6;1250:5;;;;;;;;;;;1236:19;;:10;:19;;;1228:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:1;1315:18;;:23;:43;;;;;1357:1;1342:11;;:16;1315:43;1307:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1479:28;1449:27;:58;;;;1556:1;1526:27;;:31;1518:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:8;1666:29;1682:12;1666:15;;;:29;;:::i;:::-;1655:40;;1726:14;1721:20;;;;;;;;1714:3;:27;1706:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1912:16;:14;;;:16;;:::i;:::-;1891:18;:37;;;;459:4:17;1939:11:6;:25;;;;2064:46;2091:18;2064:26;;;:46;;:::i;:::-;2058:52;;2141:14;2136:20;;;;;;;;2129:3;:27;2121:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2215:5;2208:4;:12;;;;;;;;;;;;:::i;:::-;;2240:7;2231:6;:16;;;;;;;;;;;;:::i;:::-;;2269:9;2258:8;;:20;;;;;;;;;;;;;;;;;;2413:4;2399:11;;:18;;;;;;;;;;;;;;;;;;896:1529;;;;;;;:::o;53542:735::-;53620:4;53689:5;;;;;;;;;;;53675:19;;:10;:19;;;53671:124;;53718:65;53723:18;53743:39;53718:4;;;:65;;:::i;:::-;53711:72;;;;53671:124;53807:35;53845:11;;;;;;;;;;;53807:49;;53942:14;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53942:30:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;53942:30:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53942:30:6;;;;;;;;;;;;;;;;53934:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54087:14;54073:11;;:28;;;;;;;;;;;;;;;;;;54183:46;54198:14;54214;54183:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54254:14;54249:20;;;;;;;;54242:27;;;53542:735;;;;:::o;9352:93::-;9401:4;9425:12;9418:19;;9352:93;:::o;63427:1299::-;63521:4;63624:38;63727:5;;;;;;;;;;;63713:19;;:10;:19;;;63709:132;;63756:73;63761:18;63781:47;63756:4;;;:73;;:::i;:::-;63749:80;;;;;63709:132;63967:16;:14;;;:16;;:::i;:::-;63945:18;;:38;63941:155;;64007:77;64012:22;64036:47;64007:4;;;:77;;:::i;:::-;64000:84;;;;;63941:155;64190:17;;;;;;;;;;;64167:40;;64310:20;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;64310:42:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;64310:42:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;64310:42:6;;;;;;;;;;;;;;;;64302:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64482:20;64462:17;;:40;;;;;;;;;;;;;;;;;;64608:70;64635:20;64657;64608:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64703:14;64698:20;;;;;;;;64691:27;;;63427:1299;;;;:::o;7425:153:16:-;7486:4;7508:33;7521:3;7516:9;;;;;;;;7532:4;7527:10;;;;;;;;7539:1;7508:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7566:3;7561:9;;;;;;;;7554:16;;7425:153;;;;:::o;160:6160:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "160:6160:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4342:8;4355:23;4368:9;4355:12;:23::i;:::-;4341:37;;;4389:34;4404:3;4389:34;;;;;;;;;;;;;;;;;:14;:34::i;:::-;4301:130;160:6160;303:18:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;303:18:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;303:18:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6522:237:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6522:237:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6522:237:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1518:134:5;;;:::i;:::-;;1606:33:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1606:33:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10771:224:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10771:224:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10771:224:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2251:23:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2251:23:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13616:261:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13616:261:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5857:195;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5857:195:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5857:195:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1030:35:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1030:35:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;499:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:21:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7790:354:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7790:354:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7790:354:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15497:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15497:88:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;53542:735;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53542:735:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53542:735:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2015:24:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2015:24:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3097:155:5;;;:::i;:::-;;1156:39:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1156:39:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;59500:571:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59500:571:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;59500:571:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1729:30:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1729:30:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7422:112:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7422:112:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7422:112:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10288:192;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10288:192:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2472:133:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2472:133:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2472:133:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2145:25:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2145:25:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;399:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;399:20:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;399:20:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11204:287:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11204:287:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11204:287:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;896:1529;;8:9:-1;5:2;;;30:1;27;20:12;5:2;896:1529:6;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;896:1529:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;896:1529:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;896:1529:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;896:1529:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;896:1529:6;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;896:1529:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;896:1529:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;896:1529:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;896:1529:6;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15833:3852;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15833:3852:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5365:185;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5365:185:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5365:185:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1880:23:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1880:23:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3994:236:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3994:236:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9958:184:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9958:184:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;48193:194;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48193:194:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48193:194:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;51650:647;;8:9:-1;5:2;;;30:1;27;20:12;5:2;51650:647:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;51650:647:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13168:198;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13168:198:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8490:703;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8490:703:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8490:703:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2873:113:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2873:113:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2873:113:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2003;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2003:113:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2003:113:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7089:143:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7089:143:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7089:143:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3443:199:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3443:199:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;52575:742:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52575:742:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;62464:633;;8:9:-1;5:2;;;30:1;27;20:12;5:2;62464:633:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;62464:633:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1297:42:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1297:42:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;919:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;919:28:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9621:161:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9621:161:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;54580:607;;8:9:-1;5:2;;;30:1;27;20:12;5:2;54580:607:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;54580:607:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3277:36:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3277:36:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20083:547:6;20153:4;20159;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;20176:10;20189:16;:14;:16::i;:::-;20176:29;;20234:14;20229:20;;;;;;;;20220:5;:29;20216:252;;20393:59;20404:5;20398:12;;;;;;;;20412:39;20393:4;:59::i;:::-;20454:1;20385:71;;;;;;;;;;20216:252;20589:33;20599:10;20611;20589:9;:33::i;:::-;20582:40;;;;;66060:1;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;20083:547;;;:::o;5605:712:5:-;5711:14;5706:20;;;;;;;;5695:7;:31;5691:70;;;5743:7;;5691:70;5773:24;5834:1;5816:7;5810:21;:25;5800:36;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;5800:36:5;;;;5773:63;;5847:6;5875:1;5871:5;;5866:105;5888:7;5882:21;5878:1;:25;5866:105;;;5948:7;5957:1;5942:17;;;;;;;;;;;;;;;;5925:11;5937:1;5925:14;;;;;;;;;;;:34;;;;;;;;;;;5905:3;;;;;;;5866:105;;;6013:2;6002:15;;5983:11;5997:1;5995;:3;5983:16;;;;;;;;;;;:34;;;;;;;;;;;6058:2;6047:15;;6028:11;6042:1;6040;:3;6028:16;;;;;;;;;;;:34;;;;;;;;;;;6120:2;6110:7;:12;;;;;;6103:2;:21;6092:34;;6073:11;6087:1;6085;:3;6073:16;;;;;;;;;;;:53;;;;;;;;;;;6184:2;6174:7;:12;;;;;;6167:2;:21;6156:34;;6137:11;6151:1;6149;:3;6137:16;;;;;;;;;;;:53;;;;;;;;;;;6231:2;6220:15;;6201:11;6215:1;6213;:3;6201:16;;;;;;;;;;;:34;;;;;;;;;;;6272:14;6267:20;;;;;;;;6256:7;:31;6296:11;6248:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6248:61:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5605:712;;;;;:::o;303:18:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6522:237:6:-;6590:4;6607:11;6621:10;6607:24;;6677:6;6642:18;:23;6661:3;6642:23;;;;;;;;;;;;;;;:32;6666:7;6642:32;;;;;;;;;;;;;;;:41;;;;6713:7;6699:30;;6708:3;6699:30;;;6722:6;6699:30;;;;;;;;;;;;;;;;;;6747:4;6740:11;;;6522:237;;;;:::o;1518:134:5:-;1563:8;1576:23;1589:9;1576:12;:23::i;:::-;1562:37;;;1610:34;1625:3;1610:34;;;;;;;;;;;;;;;;;:14;:34::i;:::-;1518:134;:::o;1606:33:7:-;;;;:::o;10771:224:6:-;10849:4;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;10899:14;10894:20;;;;;;;;10874:16;:14;:16::i;:::-;:40;10866:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10959:28;10979:7;10959:19;:28::i;:::-;10952:35;;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;10771:224;;;:::o;2251:23:7:-;;;;:::o;13616:261:6:-;13667:4;13685:13;13700:11;13715:28;:26;:28::i;:::-;13684:59;;;;13769:18;13762:25;;;;;;;;:3;:25;;;;;;;;;13754:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13863:6;13856:13;;;;13616:261;:::o;5857:195::-;5952:4;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;6029:14;6024:20;;;;;;;;5976:44;5991:10;6003:3;6008;6013:6;5976:14;:44::i;:::-;:68;5969:75;;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;5857:195;;;;;:::o;1030:35:7:-;;;;;;;;;;;;;:::o;499:21::-;;;;;;;;;;;;;:::o;7790:354:6:-;7852:4;7869:23;;:::i;:::-;7895:38;;;;;;;;7910:21;:19;:21::i;:::-;7895:38;;;7869:64;;7945:14;7961:12;7977:53;7995:12;8009:13;:20;8023:5;8009:20;;;;;;;;;;;;;;;;7977:17;:53::i;:::-;7944:86;;;;8057:18;8049:26;;;;;;;;:4;:26;;;;;;;;;8041:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8129:7;8122:14;;;;;7790:354;;;:::o;15497:88::-;15539:4;15563:14;:12;:14::i;:::-;15556:21;;15497:88;:::o;53542:735::-;53620:4;53689:5;;;;;;;;;;;53675:19;;:10;:19;;;53671:124;;53718:65;53723:18;53743:39;53718:4;:65::i;:::-;53711:72;;;;53671:124;53807:35;53845:11;;;;;;;;;;;53807:49;;53942:14;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53942:30:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;53942:30:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53942:30:6;;;;;;;;;;;;;;;;53934:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54087:14;54073:11;;:28;;;;;;;;;;;;;;;;;;54183:46;54198:14;54214;54183:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54254:14;54249:20;;;;;;;;54242:27;;;53542:735;;;;:::o;2015:24:7:-;;;;:::o;3097:155:5:-;3149:8;3162:30;3182:9;3162:19;:30::i;:::-;3148:44;;;3203:41;3218:3;3203:41;;;;;;;;;;;;;;;;;:14;:41::i;:::-;3097:155;:::o;1156:39:7:-;;;;;;;;;;;;;:::o;59500:571:6:-;59575:4;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;59592:10;59605:16;:14;:16::i;:::-;59592:29;;59650:14;59645:20;;;;;;;;59636:5;:29;59632:277;;59827:70;59838:5;59832:12;;;;;;;;59846:50;59827:4;:70::i;:::-;59820:77;;;;;59632:277;60029:34;60050:12;60029:20;:34::i;:::-;60022:41;;;66060:1;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;59500:571;;;:::o;1729:30:7:-;;;;:::o;7422:112:6:-;7479:7;7506:13;:20;7520:5;7506:20;;;;;;;;;;;;;;;;7499:27;;7422:112;;;:::o;10288:192::-;10350:4;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;10400:14;10395:20;;;;;;;;10375:16;:14;:16::i;:::-;:40;10367:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10460:12;;10453:19;;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;10288:192;:::o;2472:133:5:-;2535:4;2559:38;2584:12;2559:24;:38::i;:::-;2552:45;;2472:133;;;:::o;2145:25:7:-;;;;:::o;399:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11204:287:6:-;11271:4;11289:13;11304:11;11319:36;11347:7;11319:27;:36::i;:::-;11288:67;;;;11381:18;11374:25;;;;;;;;:3;:25;;;;;;;;;11366:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11477:6;11470:13;;;;11204:287;;;:::o;896:1529::-;1250:5;;;;;;;;;;;1236:19;;:10;:19;;;1228:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:1;1315:18;;:23;:43;;;;;1357:1;1342:11;;:16;1315:43;1307:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1479:28;1449:27;:58;;;;1556:1;1526:27;;:31;1518:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:8;1666:29;1682:12;1666:15;:29::i;:::-;1655:40;;1726:14;1721:20;;;;;;;;1714:3;:27;1706:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1912:16;:14;:16::i;:::-;1891:18;:37;;;;459:4:17;1939:11:6;:25;;;;2064:46;2091:18;2064:26;:46::i;:::-;2058:52;;2141:14;2136:20;;;;;;;;2129:3;:27;2121:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2215:5;2208:4;:12;;;;;;;;;;;;:::i;:::-;;2240:7;2231:6;:16;;;;;;;;;;;;:::i;:::-;;2269:9;2258:8;;:20;;;;;;;;;;;;;;;;;;2413:4;2399:11;;:18;;;;;;;;;;;;;;;;;;896:1529;;;;;;;:::o;15833:3852::-;15875:4;15941:23;15967:16;:14;:16::i;:::-;15941:42;;15994:28;16025:18;;15994:49;;16140:18;16113:23;:45;16109:105;;;16187:14;16182:20;;;;;;;;16175:27;;;;;;16109:105;16281:14;16298;:12;:14::i;:::-;16281:31;;16323:17;16343:12;;16323:32;;16366:18;16387:13;;16366:34;;16411:21;16435:11;;16411:35;;16517:23;16543:17;;;;;;;;;;;:31;;;16575:9;16586:12;16600:13;16543:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16543:71:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16543:71:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16543:71:6;;;;;;;;;;;;;;;;16517:97;;674:9:7;16633:18:6;:43;;16625:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16800:17;16819:15;16838:52;16846:18;16866:23;16838:7;:52::i;:::-;16799:91;;;;16920:18;16909:29;;;;;;;;:7;:29;;;;;;;;;16901:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17466:31;;:::i;:::-;17508:24;17543:20;17574:21;17606:19;17672:58;17682:35;;;;;;;;17697:18;17682:35;;;17719:10;17672:9;:58::i;:::-;17638:92;;;;;;;;17756:18;17745:29;;;;;;;;:7;:29;;;;;;;;;17741:183;;17798:114;17809:16;17827:69;17903:7;17898:13;;;;;;;;17798:10;:114::i;:::-;17791:121;;;;;;;;;;;;;;;;;;17741:183;17969:53;17987:20;18009:12;17969:17;:53::i;:::-;17936:86;;;;;;;;18048:18;18037:29;;;;;;;;:7;:29;;;;;;;;;18033:181;;18090:112;18101:16;18119:67;18193:7;18188:13;;;;;;;;18090:10;:112::i;:::-;18083:119;;;;;;;;;;;;;;;;;;18033:181;18255:42;18263:19;18284:12;18255:7;:42::i;:::-;18226:71;;;;;;;;18323:18;18312:29;;;;;;;;:7;:29;;;;;;;;;18308:178;;18365:109;18376:16;18394:64;18465:7;18460:13;;;;;;;;18365:10;:109::i;:::-;18358:116;;;;;;;;;;;;;;;;;;18308:178;18528:100;18553:38;;;;;;;;18568:21;;18553:38;;;18593:19;18614:13;18528:24;:100::i;:::-;18498:130;;;;;;;;18654:18;18643:29;;;;;;;;:7;:29;;;;;;;;;18639:179;;18696:110;18707:16;18725:65;18797:7;18792:13;;;;;;;;18696:10;:110::i;:::-;18689:117;;;;;;;;;;;;;;;;;;18639:179;18858:82;18883:20;18905:16;18923;18858:24;:82::i;:::-;18830:110;;;;;;;;18966:18;18955:29;;;;;;;;:7;:29;;;;;;;;;18951:177;;19008:108;19019:16;19037:63;19107:7;19102:13;;;;;;;;19008:10;:108::i;:::-;19001:115;;;;;;;;;;;;;;;;;;18951:177;19352:18;19331;:39;;;;19395:14;19381:11;:28;;;;19435:15;19420:12;:30;;;;19477:16;19461:13;:32;;;;19558:79;19573:9;19584:19;19605:14;19621:15;19558:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19662:14;19657:20;;;;;;;;19650:27;;;;;;;;;;;;;;;;15833:3852;;:::o;5365:185::-;5443:4;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;5527:14;5522:20;;;;;;;;5467:51;5482:10;5494;5506:3;5511:6;5467:14;:51::i;:::-;:75;5460:82;;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;5365:185;;;;:::o;1880:23:7:-;;;;:::o;3994:236:5:-;4091:8;4104:62;4128:8;4138:9;4149:16;4104:23;:62::i;:::-;4090:76;;;4177:45;4192:3;4177:45;;;;;;;;;;;;;;;;;:14;:45::i;:::-;3994:236;;;:::o;9958:184:6:-;10011:4;10035:17;;;;;;;;;;;:31;;;10067:14;:12;:14::i;:::-;10083:12;;10097:13;;10112:21;;10035:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10035:99:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10035:99:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10035:99:6;;;;;;;;;;;;;;;;10028:106;;9958:184;:::o;48193:194::-;48295:4;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;48319:60;48333:10;48345;48357:8;48367:11;48319:13;:60::i;:::-;48312:67;;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;48193:194;;;;;:::o;51650:647::-;51727:4;51795:5;;;;;;;;;;;51781:19;;:10;:19;;;51777:126;;51824:67;51829:18;51849:41;51824:4;:67::i;:::-;51817:74;;;;51777:126;51976:23;52002:12;;;;;;;;;;;51976:38;;52100:15;52085:12;;:30;;;;;;;;;;;;;;;;;;52200:49;52216:15;52233;52200:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52274:14;52269:20;;;;;;;;52262:27;;;51650:647;;;;:::o;13168:198::-;13228:4;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;13278:14;13273:20;;;;;;;;13253:16;:14;:16::i;:::-;:40;13245:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13338:20;:18;:20::i;:::-;13331:27;;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;13168:198;:::o;8490:703::-;8558:4;8564;8570;8576;8593:18;8614:13;:22;8628:7;8614:22;;;;;;;;;;;;;;;;8593:43;;8647:18;8676:25;8714:14;8765:36;8793:7;8765:27;:36::i;:::-;8741:60;;;;;;;;8824:18;8816:26;;;;;;;;:4;:26;;;;;;;;;8812:99;;8872:16;8867:22;;;;;;;;8891:1;8894;8897;8859:40;;;;;;;;;;;;;;;;;;;;;;;8812:99;8954:28;:26;:28::i;:::-;8923:59;;;;;;;;9005:18;8997:26;;;;;;;;:4;:26;;;;;;;;;8993:99;;9053:16;9048:22;;;;;;;;9072:1;9075;9078;9040:40;;;;;;;;;;;;;;;;;;;;;;;8993:99;9117:14;9112:20;;;;;;;;9134:13;9149;9164:20;9104:81;;;;;;;;;;;;8490:703;;;;;;:::o;2873:113:5:-;2926:4;2950:28;2965:12;2950:14;:28::i;:::-;2943:35;;2873:113;;;:::o;2003:::-;2056:4;2080:28;2095:12;2080:14;:28::i;:::-;2073:35;;2003:113;;;:::o;7089:143:6:-;7163:7;7190:18;:25;7209:5;7190:25;;;;;;;;;;;;;;;:34;7216:7;7190:34;;;;;;;;;;;;;;;;7183:41;;7089:143;;;;:::o;3443:199:5:-;3517:8;3530:46;3556:8;3566:9;3530:25;:46::i;:::-;3516:60;;;3587:47;3602:3;3587:47;;;;;;;;;;;;;;;;;:14;:47::i;:::-;3443:199;;:::o;52575:742:6:-;52617:4;52725:12;;;;;;;;;;;52711:26;;:10;:26;;;;:54;;;;52763:1;52741:24;;:10;:24;;;52711:54;52707:164;;;52789:70;52794:18;52814:44;52789:4;:70::i;:::-;52782:77;;;;52707:164;52936:16;52955:5;;;;;;;;;;;52936:24;;52971:23;52997:12;;;;;;;;;;;52971:38;;53078:12;;;;;;;;;;;53070:5;;:20;;;;;;;;;;;;;;;;;;53162:1;53139:12;;:25;;;;;;;;;;;;;;;;;;53182;53191:8;53201:5;;;;;;;;;;;53182:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53223:46;53239:15;53256:12;;;;;;;;;;;53223:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53294:14;53289:20;;;;;;;;53282:27;;;;52575:742;;:::o;62464:633::-;62551:4;62568:10;62581:16;:14;:16::i;:::-;62568:29;;62626:14;62621:20;;;;;;;;62612:5;:29;62608:298;;62816:78;62827:5;62821:12;;;;;;;;62835:58;62816:4;:78::i;:::-;62809:85;;;;;62608:298;63041:48;63068:20;63041:26;:48::i;:::-;63034:55;;;62464:633;;;;:::o;1297:42:7:-;;;;;;;;;;;;;:::o;919:28::-;;;;;;;;;;;;;:::o;9621:161:6:-;9674:4;9698:17;;;;;;;;;;;:31;;;9730:14;:12;:14::i;:::-;9746:12;;9760:13;;9698:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9698:76:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9698:76:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9698:76:6;;;;;;;;;;;;;;;;9691:83;;9621:161;:::o;54580:607::-;54669:4;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;54686:10;54699:16;:14;:16::i;:::-;54686:29;;54744:14;54739:20;;;;;;;;54730:5;:29;54726:286;;54927:73;54938:5;54932:12;;;;;;;;54946:53;54927:4;:73::i;:::-;54920:80;;;;;54726:286;55131:48;55154:24;55131:22;:48::i;:::-;55124:55;;;66060:1;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;54580:607;;;:::o;3277:36:7:-;3309:4;3277:36;:::o;7425:153:16:-;7486:4;7508:33;7521:3;7516:9;;;;;;;;7532:4;7527:10;;;;;;;;7539:1;7508:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7566:3;7561:9;;;;;;;;7554:16;;7425:153;;;;:::o;21340:3176:6:-;21410:4;21416;21473:12;21488:11;;;;;;;;;;;:23;;;21520:4;21527:6;21535:10;21488:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21488:58:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21488:58:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21488:58:6;;;;;;;;;;;;;;;;21473:73;;21572:1;21561:7;:12;21557:145;;21598:88;21609:27;21638:38;21678:7;21598:10;:88::i;:::-;21688:1;21590:100;;;;;;;;;;21557:145;21812:16;:14;:16::i;:::-;21790:18;;:38;21786:145;;21853:62;21858:22;21882:32;21853:4;:62::i;:::-;21917:1;21845:74;;;;;;;;;;21786:145;21943:25;;:::i;:::-;22025:28;:26;:28::i;:::-;21982:4;:12;;21996:4;:25;;21981:72;;;;;;;;;;;;;;;;;;;;;;;;;;22084:18;22068:34;;;;;;;;:4;:12;;;:34;;;;;;;;;22064:171;;22127:92;22138:16;22156:42;22205:4;:12;;;22200:18;;;;;;;;22127:10;:92::i;:::-;22221:1;22119:104;;;;;;;;;;;22064:171;22867:32;22880:6;22888:10;22867:12;:32::i;:::-;22843:4;:21;;:56;;;;;23126:89;23149:4;:21;;;23172:42;;;;;;;;23187:4;:25;;;23172:42;;;23126:22;:89::i;:::-;23093:4;:12;;23107:4;:15;;23092:123;;;;;;;;;;;;;;;;;;;;;;;;;;23250:18;23234:34;;;;;;;;:4;:12;;;:34;;;;;;;;;23226:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23609:37;23617:11;;23630:4;:15;;;23609:7;:37::i;:::-;23572:4;:12;;23586:4;:19;;23571:75;;;;;;;;;;;;;;;;;;;;;;;;;;23681:18;23665:34;;;;;;;;:4;:12;;;:34;;;;;;;;;23657:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23797:47;23805:13;:21;23819:6;23805:21;;;;;;;;;;;;;;;;23828:4;:15;;;23797:7;:47::i;:::-;23758:4;:12;;23772:4;:21;;23757:87;;;;;;;;;;;;;;;;;;;;;;;;;;23879:18;23863:34;;;;;;;;:4;:12;;;:34;;;;;;;;;23855:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24038:4;:19;;;24024:11;:33;;;;24092:4;:21;;;24068:13;:21;24082:6;24068:21;;;;;;;;;;;;;;;:45;;;;24189:52;24194:6;24202:4;:21;;;24225:4;:15;;;24189:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24281:6;24257:48;;24274:4;24257:48;;;24289:4;:15;;;24257:48;;;;;;;;;;;;;;;;;;24358:11;;;;;;;;;;;:22;;;24389:4;24396:6;24404:4;:21;;;24427:4;:15;;;24358:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24358:85:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24358:85:6;;;;24469:14;24464:20;;;;;;;;24486:4;:21;;;24456:52;;;;;;21340:3176;;;;;;:::o;14141:1186::-;14202:9;14213:4;14230:17;14250:11;;14230:31;;14292:1;14276:12;:17;14272:1048;;;14450:18;14470:27;;14442:56;;;;;;;14272:1048;14680:14;14697;:12;:14::i;:::-;14680:31;;14726:33;14774:23;;:::i;:::-;14812:17;14888:54;14903:9;14914:12;;14928:13;;14888:14;:54::i;:::-;14846:96;;;;;;;;14972:18;14961:29;;;;;;;;:7;:29;;;;;;;;;14957:89;;15019:7;15028:1;15011:19;;;;;;;;;;;;;;14957:89;15088:50;15095:28;15125:12;15088:6;:50::i;:::-;15062:76;;;;;;;;15168:18;15157:29;;;;;;;;:7;:29;;;;;;;;;15153:89;;15215:7;15224:1;15207:19;;;;;;;;;;;;;;15153:89;15266:18;15286:12;:21;;;15258:50;;;;;;;;;14141:1186;;;:::o;2888:2216::-;2986:4;3047:12;3062:11;;;;;;;;;;;:27;;;3098:4;3105:3;3110;3115:6;3062:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3062:60:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3062:60:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3062:60:6;;;;;;;;;;;;;;;;3047:75;;3148:1;3137:7;:12;3133:144;;3173:92;3184:27;3213:42;3257:7;3173:10;:92::i;:::-;3166:99;;;;;3133:144;3343:3;3336:10;;:3;:10;;;3332:105;;;3370:55;3375:15;3392:32;3370:4;:55::i;:::-;3363:62;;;;;3332:105;3514:22;3539:1;3514:26;;3566:3;3555:14;;:7;:14;;;3551:160;;;3611:2;3586:28;;3551:160;;;3667:18;:23;3686:3;3667:23;;;;;;;;;;;;;;;:32;3691:7;3667:32;;;;;;;;;;;;;;;;3647:52;;3551:160;3789:17;3817;3845;3873;3929:34;3937:17;3956:6;3929:7;:34::i;:::-;3903:60;;;;;;;;3989:18;3978:29;;;;;;;;:7;:29;;;;;;;;;3974:125;;4031:56;4036:16;4054:32;4031:4;:56::i;:::-;4024:63;;;;;;;;;;3974:125;4137:35;4145:13;:18;4159:3;4145:18;;;;;;;;;;;;;;;;4165:6;4137:7;:35::i;:::-;4111:61;;;;;;;;4198:18;4187:29;;;;;;;;:7;:29;;;;;;;;;4183:124;;4240:55;4245:16;4263:31;4240:4;:55::i;:::-;4233:62;;;;;;;;;;4183:124;4345:35;4353:13;:18;4367:3;4353:18;;;;;;;;;;;;;;;;4373:6;4345:7;:35::i;:::-;4319:61;;;;;;;;4406:18;4395:29;;;;;;;;:7;:29;;;;;;;;;4391:122;;4448:53;4453:16;4471:29;4448:4;:53::i;:::-;4441:60;;;;;;;;;;4391:122;4667:12;4646:13;:18;4660:3;4646:18;;;;;;;;;;;;;;;:33;;;;4711:12;4690:13;:18;4704:3;4690:18;;;;;;;;;;;;;;;:33;;;;4822:2;4796:17;:29;4792:109;;4877:12;4842:18;:23;4861:3;4842:23;;;;;;;;;;;;;;;:32;4866:7;4842:32;;;;;;;;;;;;;;;:47;;;;4792:109;4972:3;4958:26;;4967:3;4958:26;;;4977:6;4958:26;;;;;;;;;;;;;;;;;;4997:11;;;;;;;;;;;:26;;;5032:4;5039:3;5044;5049:6;4997:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4997:59:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4997:59:6;;;;5081:14;5076:20;;;;;;;;5069:27;;;;;;;;2888:2216;;;;;;;:::o;2520:313:17:-;2597:9;2608:4;2626:13;2641:18;;:::i;:::-;2663:20;2673:1;2676:6;2663:9;:20::i;:::-;2625:58;;;;2705:18;2698:25;;;;;;;;:3;:25;;;;;;;;;2694:73;;2748:3;2753:1;2740:15;;;;;;;;;;;2694:73;2787:18;2807:17;2816:7;2807:8;:17::i;:::-;2779:46;;;;;;2520:313;;;;;;:::o;4699:231:5:-;4746:4;4764:13;4779:20;4803:41;4811:21;4834:9;4803:7;:41::i;:::-;4763:81;;;;4870:18;4863:25;;;;;;;;:3;:25;;;;;;;;;4855:34;;;;;;4907:15;4900:22;;;;4699:231;:::o;36304:572:6:-;36382:4;36388;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;36405:10;36418:16;:14;:16::i;:::-;36405:29;;36463:14;36458:20;;;;;;;;36449:5;:29;36445:260;;36622:67;36633:5;36627:12;;;;;;;;36641:47;36622:4;:67::i;:::-;36691:1;36614:79;;;;;;;;;;36445:260;36815:53;36832:10;36844;36856:11;36815:16;:53::i;:::-;36808:60;;;;;66060:1;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;36304:572;;;:::o;60348:1747::-;60415:4;60473:21;60559:5;;;;;;;;;;;60545:19;;:10;:19;;;60541:124;;60588:65;60593:18;60613:39;60588:4;:65::i;:::-;60581:72;;;;;60541:124;60791:16;:14;:16::i;:::-;60769:18;;:38;60765:147;;60831:69;60836:22;60860:39;60831:4;:69::i;:::-;60824:76;;;;;60765:147;61018:12;61001:14;:12;:14::i;:::-;:29;60997:152;;;61054:83;61059:29;61090:46;61054:4;:83::i;:::-;61047:90;;;;;60997:152;61243:13;;61228:12;:28;61224:129;;;61280:61;61285:15;61302:38;61280:4;:61::i;:::-;61273:68;;;;;61224:129;61521:12;61505:13;;:28;61486:47;;61661:13;;61641:16;:33;;61633:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;61805:16;61789:13;:32;;;;61941:34;61955:5;;;;;;;;;;;61962:12;61941:13;:34::i;:::-;61993:54;62009:5;;;;;;;;;;;62016:12;62030:16;61993:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;62072:14;62067:20;;;;;;;;62060:27;;;60348:1747;;;;:::o;25774:537::-;25858:4;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;25875:10;25888:16;:14;:16::i;:::-;25875:29;;25933:14;25928:20;;;;;;;;25919:5;:29;25915:249;;26091:61;26102:5;26096:12;;;;;;;;26110:41;26091:4;:61::i;:::-;26084:68;;;;;25915:249;26263:40;26275:10;26287:1;26290:12;26263:11;:40::i;:::-;26256:47;;;66060:1;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;25774:537;;;:::o;11745:1268::-;11822:9;11833:4;11918:17;11946:24;11981:11;12054:37;12094:14;:23;12109:7;12094:23;;;;;;;;;;;;;;;12054:63;;12351:1;12323:14;:24;;;:29;12319:92;;;12377:18;12397:1;12369:30;;;;;;;;;;;;;12319:92;12638:46;12646:14;:24;;;12672:11;;12638:7;:46::i;:::-;12605:79;;;;;;;;12710:18;12699:29;;;;;;;;:7;:29;;;;;;;;;12695:81;;12753:7;12762:1;12745:19;;;;;;;;;;;;;12695:81;12808:58;12816:19;12837:14;:28;;;12808:7;:58::i;:::-;12788:78;;;;;;;;12892:18;12881:29;;;;;;;;:7;:29;;;;;;;;;12877:81;;12935:7;12944:1;12927:19;;;;;;;;;;;;;12877:81;12978:18;12998:6;12970:35;;;;;;;;11745:1268;;;;:::o;9352:93::-;9401:4;9425:12;9418:19;;9352:93;:::o;63427:1299::-;63521:4;63624:38;63727:5;;;;;;;;;;;63713:19;;:10;:19;;;63709:132;;63756:73;63761:18;63781:47;63756:4;:73::i;:::-;63749:80;;;;;63709:132;63967:16;:14;:16::i;:::-;63945:18;;:38;63941:155;;64007:77;64012:22;64036:47;64007:4;:77::i;:::-;64000:84;;;;;63941:155;64190:17;;;;;;;;;;;64167:40;;64310:20;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;64310:42:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;64310:42:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;64310:42:6;;;;;;;;;;;;;;;;64302:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64482:20;64462:17;;:40;;;;;;;;;;;;;;;;;;64608:70;64635:20;64657;64608:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64703:14;64698:20;;;;;;;;64691:27;;;63427:1299;;;;:::o;1354:236:8:-;1410:9;1421:4;1447:1;1442;:6;1438:145;;1473:18;1497:1;1493;:5;1465:34;;;;;;1438:145;1540:27;1569:1;1532:39;;;;;;;1354:236;;;;;;:::o;2054:353:17:-;2123:9;2134:10;;:::i;:::-;2158:14;2174:19;2197:27;2205:1;:10;;;2217:6;2197:7;:27::i;:::-;2157:67;;;;2247:18;2239:26;;;;;;;;:4;:26;;;;;;;;;2235:92;;2290:4;2296:18;;;;;;;;2311:1;2296:18;;;2282:33;;;;;;;;;;;2235:92;2347:18;2367:31;;;;;;;;2382:14;2367:31;;;2339:60;;;;;;;;;2054:353;;;;;;:::o;7701:187:16:-;7786:4;7808:43;7821:3;7816:9;;;;;;;;7832:4;7827:10;;;;;;;;7839:11;7808:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7876:3;7871:9;;;;;;;;7864:16;;7701:187;;;;;:::o;1675:258:8:-;1731:9;1742:4;1759:6;1772:1;1768;:5;1759:14;;1795:1;1790;:6;1786:140;;1821:18;1841:1;1813:30;;;;;;;1786:140;1884:26;1912:1;1876:38;;;;;;;;1675:258;;;;;;:::o;2978:328:17:-;3075:9;3086:4;3104:13;3119:18;;:::i;:::-;3141:20;3151:1;3154:6;3141:9;:20::i;:::-;3103:58;;;;3183:18;3176:25;;;;;;;;:3;:25;;;;;;;;;3172:73;;3226:3;3231:1;3218:15;;;;;;;;;;;3172:73;3264:34;3272:17;3281:7;3272:8;:17::i;:::-;3291:6;3264:7;:34::i;:::-;3257:41;;;;;;2978:328;;;;;;;:::o;42444:994:6:-;42578:4;42584;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;42601:10;42614:16;:14;:16::i;:::-;42601:29;;42659:14;42654:20;;;;;;;;42645:5;:29;42641:269;;42823:71;42834:5;42828:12;;;;;;;;42842:51;42823:4;:71::i;:::-;42896:1;42815:83;;;;;;;;;;42641:269;42930:16;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;42930:33:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;42930:33:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;42930:33:6;;;;;;;;;;;;;;;;42922:41;;42992:14;42987:20;;;;;;;;42978:5;:29;42974:273;;43156:75;43167:5;43161:12;;;;;;;;43175:55;43156:4;:75::i;:::-;43233:1;43148:87;;;;;;;;;;42974:273;43357:73;43378:10;43390:8;43400:11;43413:16;43357:20;:73::i;:::-;43350:80;;;;;66060:1;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;42444:994;;;;;;:::o;49062:2139::-;49180:4;49238:12;49253:11;;;;;;;;;;;:24;;;49286:4;49293:11;49306:10;49318:8;49328:11;49253:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49253:87:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;49253:87:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;49253:87:6;;;;;;;;;;;;;;;;49238:102;;49366:1;49355:7;:12;49351:151;;49391:99;49402:27;49431:49;49482:7;49391:10;:99::i;:::-;49384:106;;;;;49351:151;49575:10;49563:22;;:8;:22;;;49559:146;;;49609:84;49614:26;49642:50;49609:4;:84::i;:::-;49602:91;;;;;49559:146;49717:17;49745:22;49778:24;50121:45;50129:13;:23;50143:8;50129:23;;;;;;;;;;;;;;;;50154:11;50121:7;:45::i;:::-;50090:76;;;;;;;;50192:18;50181:29;;;;;;;;:7;:29;;;;;;;;;50177:166;;50234:97;50245:16;50263:52;50322:7;50317:13;;;;;;;;50234:10;:97::i;:::-;50227:104;;;;;;;;50177:166;50388:47;50396:13;:25;50410:10;50396:25;;;;;;;;;;;;;;;;50423:11;50388:7;:47::i;:::-;50355:80;;;;;;;;50461:18;50450:29;;;;;;;;:7;:29;;;;;;;;;50446:166;;50503:97;50514:16;50532:52;50591:7;50586:13;;;;;;;;50503:10;:97::i;:::-;50496:104;;;;;;;;50446:166;50841:17;50815:13;:23;50829:8;50815:23;;;;;;;;;;;;;;;:43;;;;50897:19;50869:13;:25;50883:10;50869:25;;;;;;;;;;;;;;;:47;;;;50990:10;50971:43;;50980:8;50971:43;;;51002:11;50971:43;;;;;;;;;;;;;;;;;;51067:11;;;;;;;;;;;:23;;;51099:4;51106:11;51119:10;51131:8;51141:11;51067:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;51067:86:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;51067:86:6;;;;51178:14;51173:20;;;;;;;;51166:27;;;;;;49062:2139;;;;;;;:::o;32066:524::-;32140:4;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;32157:10;32170:16;:14;:16::i;:::-;32157:29;;32215:14;32210:20;;;;;;;;32201:5;:29;32197:249;;32373:61;32384:5;32378:12;;;;;;;;32392:41;32373:4;:61::i;:::-;32366:68;;;;;32197:249;32545:37;32557:10;32569:12;32545:11;:37::i;:::-;32538:44;;;66060:1;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;32066:524;;;:::o;24867:527::-;24941:4;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;24958:10;24971:16;:14;:16::i;:::-;24958:29;;25016:14;25011:20;;;;;;;;25002:5;:29;24998:249;;25174:61;25185:5;25179:12;;;;;;;;25193:41;25174:4;:61::i;:::-;25167:68;;;;;24998:249;25346:40;25358:10;25370:12;25384:1;25346:11;:40::i;:::-;25339:47;;;66060:1;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;24867:527;;;:::o;37209:594::-;37311:4;37317;65993:11;;;;;;;;;;;65985:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66044:5;66030:11;;:19;;;;;;;;;;;;;;;;;;37334:10;37347:16;:14;:16::i;:::-;37334:29;;37392:14;37387:20;;;;;;;;37378:5;:29;37374:260;;37551:67;37562:5;37556:12;;;;;;;;37570:47;37551:4;:67::i;:::-;37620:1;37543:79;;;;;;;;;;37374:260;37744:51;37761:10;37773:8;37783:11;37744:16;:51::i;:::-;37737:58;;;;;66060:1;66086:4;66072:11;;:18;;;;;;;;;;;;;;;;;;37209:594;;;;;:::o;55455:973::-;55536:4;55605:5;;;;;;;;;;;55591:19;;:10;:19;;;55587:127;;55634:68;55639:18;55659:42;55634:4;:68::i;:::-;55627:75;;;;55587:127;55821:16;:14;:16::i;:::-;55799:18;;:38;55795:150;;55861:72;55866:22;55890:42;55861:4;:72::i;:::-;55854:79;;;;55795:150;840:4:7;56017:24:6;:51;56013:157;;;56092:66;56097:15;56114:43;56092:4;:66::i;:::-;56085:73;;;;56013:157;56182:29;56214:21;;56182:53;;56270:24;56246:21;:48;;;;56312:68;56329:24;56355;56312:68;;;;;;;;;;;;;;;;;;;;;;;;56405:14;56400:20;;;;;;;;56393:27;;;55455:973;;;;:::o;5171:245:5:-;5238:4;5303;5289:18;;:10;:18;;;5281:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5359:6;5346:9;:19;5338:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5402:6;5395:13;;5171:245;;;;:::o;4568:337:17:-;4656:9;4667:4;4685:13;4700:19;;:::i;:::-;4723:31;4738:6;4746:7;4723:14;:31::i;:::-;4684:70;;;;4776:18;4769:25;;;;;;;;:3;:25;;;;;;;;;4765:73;;4819:3;4824:1;4811:15;;;;;;;;;;;4765:73;4858:18;4878;4887:8;4878;:18::i;:::-;4850:47;;;;;;4568:337;;;;;;:::o;2002:271:8:-;2073:9;2084:4;2102:14;2118:8;2130:13;2138:1;2141;2130:7;:13::i;:::-;2101:42;;;;2168:18;2160:26;;;;;;;;:4;:26;;;;;;;;;2156:75;;2211:4;2217:1;2203:16;;;;;;;;;;;2156:75;2250:15;2258:3;2263:1;2250:7;:15::i;:::-;2243:22;;;;;;2002:271;;;;;;;:::o;813:515:17:-;874:9;885:10;;:::i;:::-;909:14;925:20;949:22;957:3;459:4;949:7;:22::i;:::-;908:63;;;;994:18;986:26;;;;;;;;:4;:26;;;;;;;;;982:92;;1037:4;1043:18;;;;;;;;1058:1;1043:18;;;1029:33;;;;;;;;;;;982:92;1087:14;1103:13;1120:31;1128:15;1145:5;1120:7;:31::i;:::-;1086:65;;;;1174:18;1166:26;;;;;;;;:4;:26;;;;;;;;;1162:92;;1217:4;1223:18;;;;;;;;1238:1;1223:18;;;1209:33;;;;;;;;;;;;;1162:92;1274:18;1294:25;;;;;;;;1309:8;1294:25;;;1266:54;;;;;;;;;;;813:515;;;;;;:::o;7333:213::-;7390:4;459;7515:3;:12;;;:23;;;;;;7508:30;;7333:213;;;:::o;38508:3409:6:-;38603:4;38609;38673:12;38688:11;;;;;;;;;;;:30;;;38727:4;38734:5;38741:8;38751:11;38688:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38688:75:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38688:75:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38688:75:6;;;;;;;;;;;;;;;;38673:90;;38789:1;38778:7;:12;38774:153;;38815:96;38826:27;38855:46;38903:7;38815:10;:96::i;:::-;38913:1;38807:108;;;;;;;;;;38774:153;39037:16;:14;:16::i;:::-;39015:18;;:38;39011:153;;39078:70;39083:22;39107:40;39078:4;:70::i;:::-;39150:1;39070:82;;;;;;;;;;39011:153;39176:32;;:::i;:::-;39322:14;:24;39337:8;39322:24;;;;;;;;;;;;;;;:38;;;39301:4;:18;;:59;;;;;39491:37;39519:8;39491:27;:37::i;:::-;39454:4;:12;;39468:4;:19;;39453:75;;;;;;;;;;;;;;;;;;;;;;;;;;39559:18;39543:34;;;;;;;;:4;:12;;;:34;;;;;;;;;39539:192;;39602:113;39613:16;39631:63;39701:4;:12;;;39696:18;;;;;;;;39602:10;:113::i;:::-;39717:1;39594:125;;;;;;;;;;;39539:192;39833:2;39813:11;:23;39809:157;;;39872:4;:19;;;39853:4;:16;;:38;;;;;39809:157;;;39943:11;39924:4;:16;;:30;;;;;39809:157;40564:37;40577:5;40584:4;:16;;;40564:12;:37::i;:::-;40539:4;:22;;:62;;;;;40903:52;40911:4;:19;;;40932:4;:22;;;40903:7;:52::i;:::-;40863:4;:12;;40877:4;:22;;40862:93;;;;;;;;;;;;;;;;;;;;;;;;;;40990:18;40974:34;;;;;;;;:4;:12;;;:34;;;;;;;;;40966:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41123:45;41131:12;;41145:4;:22;;;41123:7;:45::i;:::-;41085:4;:12;;41099:4;:20;;41084:84;;;;;;;;;;;;;;;;;;;;;;;;;;41203:18;41187:34;;;;;;;;:4;:12;;;:34;;;;;;;;;41179:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41395:4;:22;;;41358:14;:24;41373:8;41358:24;;;;;;;;;;;;;;;:34;;:59;;;;41469:11;;41428:14;:24;41443:8;41428:24;;;;;;;;;;;;;;;:38;;:52;;;;41506:4;:20;;;41491:12;:35;;;;41587:98;41599:5;41606:8;41616:4;:22;;;41640:4;:22;;;41664:4;:20;;;41587:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41738:11;;;;;;;;;;;:29;;;41776:4;41783:5;41790:8;41800:4;:22;;;41824:4;:18;;;41738:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;41738:105:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;41738:105:6;;;;41869:14;41864:20;;;;;;;;41886:4;:22;;;41856:53;;;;;;38508:3409;;;;;;;:::o;5424:173:5:-;5570:2;:11;;:19;5582:6;5570:19;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5570:19:5;5424:173;;:::o;27200:4598:6:-;27307:4;27350:1;27332:14;:19;:42;;;;27373:1;27355:14;:19;27332:42;27324:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27444:27;;:::i;:::-;27588:28;:26;:28::i;:::-;27545:4;:12;;27559:4;:25;;27544:72;;;;;;;;;;;;;;;;;;;;;;;;;;27647:18;27631:34;;;;;;;;:4;:12;;;:34;;;;;;;;;27627:168;;27689:94;27700:16;27718:44;27769:4;:12;;;27764:18;;;;;;;;27689:10;:94::i;:::-;27682:101;;;;;27627:168;27866:1;27849:14;:18;27845:1290;;;28145:14;28125:4;:17;;:34;;;;;28212:77;28230:42;;;;;;;;28245:4;:25;;;28230:42;;;28274:14;28212:17;:77::i;:::-;28177:4;:12;;28191:4;:17;;28176:113;;;;;;;;;;;;;;;;;;;;;;;;;;28324:18;28308:34;;;;;;;;:4;:12;;;:34;;;;;;;;;28304:185;;28370:103;28381:16;28399:53;28459:4;:12;;;28454:18;;;;;;;;28370:10;:103::i;:::-;28363:110;;;;;28304:185;27845:1290;;;28791:82;28814:14;28830:42;;;;;;;;28845:4;:25;;;28830:42;;;28791:22;:82::i;:::-;28756:4;:12;;28770:4;:17;;28755:118;;;;;;;;;;;;;;;;;;;;;;;;;;28908:18;28892:34;;;;;;;;:4;:12;;;:34;;;;;;;;;28888:185;;28954:103;28965:16;28983:53;29043:4;:12;;;29038:18;;;;;;;;28954:10;:103::i;:::-;28947:110;;;;;28888:185;29109:14;29089:4;:17;;:34;;;;;27845:1290;29189:12;29204:11;;;;;;;;;;;:25;;;29238:4;29245:8;29255:4;:17;;;29204:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29204:69:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29204:69:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29204:69:6;;;;;;;;;;;;;;;;29189:84;;29299:1;29288:7;:12;29284:142;;29324:90;29335:27;29364:40;29406:7;29324:10;:90::i;:::-;29317:97;;;;;;29284:142;29536:16;:14;:16::i;:::-;29514:18;;:38;29510:142;;29576:64;29581:22;29605:34;29576:4;:64::i;:::-;29569:71;;;;;;29510:142;29947:39;29955:11;;29968:4;:17;;;29947:7;:39::i;:::-;29910:4;:12;;29924:4;:19;;29909:77;;;;;;;;;;;;;;;;;;;;;;;;;;30017:18;30001:34;;;;;;;;:4;:12;;;:34;;;;;;;;;29997:178;;30059:104;30070:16;30088:54;30149:4;:12;;;30144:18;;;;;;;;30059:10;:104::i;:::-;30052:111;;;;;;29997:178;30227:51;30235:13;:23;30249:8;30235:23;;;;;;;;;;;;;;;;30260:4;:17;;;30227:7;:51::i;:::-;30188:4;:12;;30202:4;:21;;30187:91;;;;;;;;;;;;;;;;;;;;;;;;;;30309:18;30293:34;;;;;;;;:4;:12;;;:34;;;;;;;;;30289:181;;30351:107;30362:16;30380:57;30444:4;:12;;;30439:18;;;;;;;;30351:10;:107::i;:::-;30344:114;;;;;;30289:181;30568:4;:17;;;30551:14;:12;:14::i;:::-;:34;30547:155;;;30609:81;30614:29;30645:44;30609:4;:81::i;:::-;30602:88;;;;;;30547:155;31198:42;31212:8;31222:4;:17;;;31198:13;:42::i;:::-;31333:4;:19;;;31319:11;:33;;;;31389:4;:21;;;31363:13;:23;31377:8;31363:23;;;;;;;;;;;;;;;:47;;;;31515:4;31488:52;;31497:8;31488:52;;;31522:4;:17;;;31488:52;;;;;;;;;;;;;;;;;;31556:54;31563:8;31573:4;:17;;;31592:4;:17;;;31556:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31663:11;;;;;;;;;;;:24;;;31696:4;31703:8;31713:4;:17;;;31732:4;:17;;;31663:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31663:87:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31663:87:6;;;;31775:14;31770:20;;;;;;;;31763:27;;;;27200:4598;;;;;;:::o;566:343:8:-;622:9;633:4;659:1;654;:6;650:69;;;685:18;705:1;677:30;;;;;;;;;650:69;731:6;744:1;740;:5;731:14;;771:1;766;762;:5;;;;;;:10;758:144;;797:26;825:1;789:38;;;;;;;;;;758:144;868:18;888:1;860:30;;;;;566:343;;;;;;:::o;1004:215::-;1060:9;1071:4;1097:1;1092;:6;1088:77;;;1123:26;1151:1;1115:38;;;;;;;;;1088:77;1185:18;1209:1;1205;:5;;;;;;1177:34;;;;1004:215;;;;;;:::o;44050:3582:6:-;44188:4;44194;44256:12;44271:11;;;;;;;;;;;:34;;;44314:4;44329:16;44348:10;44360:8;44370:11;44271:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44271:111:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44271:111:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;44271:111:6;;;;;;;;;;;;;;;;44256:126;;44408:1;44397:7;:12;44393:150;;44434:93;44445:27;44474:43;44519:7;44434:10;:93::i;:::-;44529:1;44426:105;;;;;;;;;;44393:150;44653:16;:14;:16::i;:::-;44631:18;;:38;44627:150;;44694:67;44699:22;44723:37;44694:4;:67::i;:::-;44763:1;44686:79;;;;;;;;;;44627:150;44923:16;:14;:16::i;:::-;44882;:35;;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44882:37:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44882:37:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;44882:37:6;;;;;;;;;;;;;;;;:57;44878:180;;44964:78;44969:22;44993:48;44964:4;:78::i;:::-;45044:1;44956:90;;;;;;;;;;44878:180;45131:10;45119:22;;:8;:22;;;45115:145;;;45166:78;45171:26;45199:44;45166:4;:78::i;:::-;45246:1;45158:90;;;;;;;;;;45115:145;45330:1;45315:11;:16;45311:147;;;45356:86;45361:36;45399:42;45356:4;:86::i;:::-;45444:1;45348:98;;;;;;;;;;45311:147;45534:2;45514:11;:23;45510:158;;;45562:90;45567:36;45605:46;45562:4;:90::i;:::-;45654:1;45554:102;;;;;;;;;;45510:158;45724:21;45747:22;45773:51;45790:10;45802:8;45812:11;45773:16;:51::i;:::-;45723:101;;;;45864:14;45859:20;;;;;;;;45839:16;:40;45835:163;;45904:78;45915:16;45909:23;;;;;;;;45934:47;45904:4;:78::i;:::-;45984:1;45896:90;;;;;;;;;;;;45835:163;46212:21;46235:16;46255:11;;;;;;;;;;;:41;;;46305:4;46320:16;46339:17;46255:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46255:102:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46255:102:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;46255:102:6;;;;;;;;;;;;;;;;;;;;;;;;;46211:146;;;;46401:14;46396:20;;;;;;;;46376:16;:40;46368:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46606:11;46566:16;:26;;;46593:8;46566:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46566:36:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46566:36:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;46566:36:6;;;;;;;;;;;;;;;;:51;;46558:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46775:15;46842:4;46805:42;;46813:16;46805:42;;;46801:254;;;46877:63;46899:4;46906:10;46918:8;46928:11;46877:13;:63::i;:::-;46864:76;;46801:254;;;46986:16;:22;;;47009:10;47021:8;47031:11;46986:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46986:57:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46986:57:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;46986:57:6;;;;;;;;;;;;;;;;46973:70;;46801:254;47180:14;47175:20;;;;;;;;47161:10;:34;47153:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47285:96;47301:10;47313:8;47323:17;47350:16;47369:11;47285:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47434:11;;;;;;;;;;;:33;;;47476:4;47491:16;47510:10;47522:8;47532:17;47551:11;47434:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;47434:129:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47434:129:6;;;;47589:14;47584:20;;;;;;;;47606:17;47576:48;;;;;;;;;;44050:3582;;;;;;;;:::o;33017:3034::-;33101:4;33160:12;33175:11;;;;;;;;;;;:25;;;33209:4;33216:8;33226:12;33175:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33175:64:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33175:64:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;33175:64:6;;;;;;;;;;;;;;;;33160:79;;33265:1;33254:7;:12;33250:142;;33290:90;33301:27;33330:40;33372:7;33290:10;:90::i;:::-;33283:97;;;;;33250:142;33502:16;:14;:16::i;:::-;33480:18;;:38;33476:142;;33542:64;33547:22;33571:34;33542:4;:64::i;:::-;33535:71;;;;;33476:142;33727:12;33710:14;:12;:14::i;:::-;:29;33706:143;;;33763:74;33768:29;33799:37;33763:4;:74::i;:::-;33756:81;;;;;33706:143;33861:27;;:::i;:::-;34176:37;34204:8;34176:27;:37::i;:::-;34139:4;:12;;34153:4;:19;;34138:75;;;;;;;;;;;;;;;;;;;;;;;;;;34244:18;34228:34;;;;;;;;:4;:12;;;:34;;;;;;;;;34224:181;;34286:107;34297:16;34315:57;34379:4;:12;;;34374:18;;;;;;;;34286:10;:107::i;:::-;34279:114;;;;;;34224:181;34458:42;34466:4;:19;;;34487:12;34458:7;:42::i;:::-;34418:4;:12;;34432:4;:22;;34417:83;;;;;;;;;;;;;;;;;;;;;;;;;;34531:18;34515:34;;;;;;;;:4;:12;;;:34;;;;;;;;;34511:188;;34573:114;34584:16;34602:64;34673:4;:12;;;34668:18;;;;;;;;34573:10;:114::i;:::-;34566:121;;;;;;34511:188;34750:35;34758:12;;34772;34750:7;:35::i;:::-;34712:4;:12;;34726:4;:20;;34711:74;;;;;;;;;;;;;;;;;;;;;;;;;;34816:18;34800:34;;;;;;;;:4;:12;;;:34;;;;;;;;;34796:179;;34858:105;34869:16;34887:55;34949:4;:12;;;34944:18;;;;;;;;34858:10;:105::i;:::-;34851:112;;;;;;34796:179;35467:37;35481:8;35491:12;35467:13;:37::i;:::-;35624:4;:22;;;35587:14;:24;35602:8;35587:24;;;;;;;;;;;;;;;:34;;:59;;;;35698:11;;35657:14;:24;35672:8;35657:24;;;;;;;;;;;;;;;:38;;:52;;;;35735:4;:20;;;35720:12;:35;;;;35811:76;35818:8;35828:12;35842:4;:22;;;35866:4;:20;;;35811:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35940:11;;;;;;;;;;;:24;;;35973:4;35980:8;35990:12;35940:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35940:63:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;35940:63:6;;;;36028:14;36023:20;;;;;;;;36016:27;;;;33017:3034;;;;;:::o;3837:620:17:-;3917:9;3928:10;;:::i;:::-;4235:14;4251;4269:25;459:4;4287:6;4269:7;:25::i;:::-;4234:60;;;;4317:18;4309:26;;;;;;;;:4;:26;;;;;;;;;4305:92;;4360:4;4366:18;;;;;;;;4381:1;4366:18;;;4352:33;;;;;;;;;;;4305:92;4414:35;4421:9;4432:7;:16;;;4414:6;:35::i;:::-;4407:42;;;;;;3837:620;;;;;;:::o;160:6160:5:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.16;\r\n\r\nimport \"./CToken.sol\";\r\n\r\n/**\r\n * @title Compound's CEther Contract\r\n * @notice CToken which wraps Ether\r\n * @author Compound\r\n */\r\ncontract CEther is CToken {\r\n    /**\r\n     * @notice Construct a new CEther money market\r\n     * @param comptroller_ The address of the Comptroller\r\n     * @param interestRateModel_ The address of the interest rate model\r\n     * @param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\r\n     * @param name_ ERC-20 name of this token\r\n     * @param symbol_ ERC-20 symbol of this token\r\n     * @param decimals_ ERC-20 decimal precision of this token\r\n     * @param admin_ Address of the administrator of this token\r\n     */\r\n    constructor(ComptrollerInterface comptroller_,\r\n                InterestRateModel interestRateModel_,\r\n                uint initialExchangeRateMantissa_,\r\n                string memory name_,\r\n                string memory symbol_,\r\n                uint8 decimals_,\r\n                address payable admin_) public {\r\n        // Creator of the contract is admin during initialization\r\n        admin = msg.sender;\r\n\r\n        initialize(comptroller_, interestRateModel_, initialExchangeRateMantissa_, name_, symbol_, decimals_);\r\n\r\n        // Set the proper admin now that initialization is done\r\n        admin = admin_;\r\n    }\r\n\r\n\r\n    /*** User Interface ***/\r\n\r\n    /**\r\n     * @notice Sender supplies assets into the market and receives cTokens in exchange\r\n     * @dev Reverts upon any failure\r\n     */\r\n    function mint() external payable {\r\n        (uint err,) = mintInternal(msg.value);\r\n        requireNoError(err, \"mint failed\");\r\n    }\r\n\r\n    /**\r\n     * @notice Sender redeems cTokens in exchange for the underlying asset\r\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\r\n     * @param redeemTokens The number of cTokens to redeem into underlying\r\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\r\n     */\r\n    function redeem(uint redeemTokens) external returns (uint) {\r\n        return redeemInternal(redeemTokens);\r\n    }\r\n\r\n    /**\r\n     * @notice Sender redeems cTokens in exchange for a specified amount of underlying asset\r\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\r\n     * @param redeemAmount The amount of underlying to redeem\r\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\r\n     */\r\n    function redeemUnderlying(uint redeemAmount) external returns (uint) {\r\n        return redeemUnderlyingInternal(redeemAmount);\r\n    }\r\n\r\n    /**\r\n      * @notice Sender borrows assets from the protocol to their own address\r\n      * @param borrowAmount The amount of the underlying asset to borrow\r\n      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\r\n      */\r\n    function borrow(uint borrowAmount) external returns (uint) {\r\n        return borrowInternal(borrowAmount);\r\n    }\r\n\r\n    /**\r\n     * @notice Sender repays their own borrow\r\n     * @dev Reverts upon any failure\r\n     */\r\n    function repayBorrow() external payable {\r\n        (uint err,) = repayBorrowInternal(msg.value);\r\n        requireNoError(err, \"repayBorrow failed\");\r\n    }\r\n\r\n    /**\r\n     * @notice Sender repays a borrow belonging to borrower\r\n     * @dev Reverts upon any failure\r\n     * @param borrower the account with the debt being payed off\r\n     */\r\n    function repayBorrowBehalf(address borrower) external payable {\r\n        (uint err,) = repayBorrowBehalfInternal(borrower, msg.value);\r\n        requireNoError(err, \"repayBorrowBehalf failed\");\r\n    }\r\n\r\n    /**\r\n     * @notice The sender liquidates the borrowers collateral.\r\n     *  The collateral seized is transferred to the liquidator.\r\n     * @dev Reverts upon any failure\r\n     * @param borrower The borrower of this cToken to be liquidated\r\n     * @param cTokenCollateral The market in which to seize collateral from the borrower\r\n     */\r\n    function liquidateBorrow(address borrower, CToken cTokenCollateral) external payable {\r\n        (uint err,) = liquidateBorrowInternal(borrower, msg.value, cTokenCollateral);\r\n        requireNoError(err, \"liquidateBorrow failed\");\r\n    }\r\n\r\n    /**\r\n     * @notice Send Ether to CEther to mint\r\n     */\r\n    function () external payable {\r\n        (uint err,) = mintInternal(msg.value);\r\n        requireNoError(err, \"mint failed\");\r\n    }\r\n\r\n    /*** Safe Token ***/\r\n\r\n    /**\r\n     * @notice Gets balance of this contract in terms of Ether, before this message\r\n     * @dev This excludes the value of the current message, if any\r\n     * @return The quantity of Ether owned by this contract\r\n     */\r\n    function getCashPrior() internal view returns (uint) {\r\n        (MathError err, uint startingBalance) = subUInt(address(this).balance, msg.value);\r\n        require(err == MathError.NO_ERROR);\r\n        return startingBalance;\r\n    }\r\n\r\n    /**\r\n     * @notice Perform the actual transfer in, which is a no-op\r\n     * @param from Address sending the Ether\r\n     * @param amount Amount of Ether being sent\r\n     * @return The actual amount of Ether transferred\r\n     */\r\n    function doTransferIn(address from, uint amount) internal returns (uint) {\r\n        // Sanity checks\r\n        require(msg.sender == from, \"sender mismatch\");\r\n        require(msg.value == amount, \"value mismatch\");\r\n        return amount;\r\n    }\r\n\r\n    function doTransferOut(address payable to, uint amount) internal {\r\n        /* Send the Ether, with minimal gas and revert on failure */\r\n        to.transfer(amount);\r\n    }\r\n\r\n    function requireNoError(uint errCode, string memory message) internal pure {\r\n        if (errCode == uint(Error.NO_ERROR)) {\r\n            return;\r\n        }\r\n\r\n        bytes memory fullMessage = new bytes(bytes(message).length + 5);\r\n        uint i;\r\n\r\n        for (i = 0; i < bytes(message).length; i++) {\r\n            fullMessage[i] = bytes(message)[i];\r\n        }\r\n\r\n        fullMessage[i+0] = byte(uint8(32));\r\n        fullMessage[i+1] = byte(uint8(40));\r\n        fullMessage[i+2] = byte(uint8(48 + ( errCode / 10 )));\r\n        fullMessage[i+3] = byte(uint8(48 + ( errCode % 10 )));\r\n        fullMessage[i+4] = byte(uint8(41));\r\n\r\n        require(errCode == uint(Error.NO_ERROR), string(fullMessage));\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\pillardev\\Desktop\\Compound2.0\\compoundv2\\contracts\\CEther.sol",
  "ast": {
    "absolutePath": "/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/CEther.sol",
    "exportedSymbols": {
      "CEther": [
        1960
      ]
    },
    "id": 1961,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1586,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/CToken.sol",
        "file": "./CToken.sol",
        "id": 1587,
        "nodeType": "ImportDirective",
        "scope": 1961,
        "sourceUnit": 5466,
        "src": "28:22:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1588,
              "name": "CToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5465,
              "src": "179:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CToken_$5465",
                "typeString": "contract CToken"
              }
            },
            "id": 1589,
            "nodeType": "InheritanceSpecifier",
            "src": "179:6:5"
          }
        ],
        "contractDependencies": [
          5465,
          5525,
          5826,
          6111,
          11707,
          12314
        ],
        "contractKind": "contract",
        "documentation": "@title Compound's CEther Contract\n@notice CToken which wraps Ether\n@author Compound",
        "fullyImplemented": true,
        "id": 1960,
        "linearizedBaseContracts": [
          1960,
          5465,
          11707,
          12314,
          6111,
          5826,
          5525
        ],
        "name": "CEther",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1624,
              "nodeType": "Block",
              "src": "1022:310:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1606,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5485,
                      "src": "1100:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1607,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17411,
                        "src": "1108:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1108:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1100:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1610,
                  "nodeType": "ExpressionStatement",
                  "src": "1100:18:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1612,
                        "name": "comptroller_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "1142:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComptrollerInterface_$10972",
                          "typeString": "contract ComptrollerInterface"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1613,
                        "name": "interestRateModel_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1593,
                        "src": "1156:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InterestRateModel_$14546",
                          "typeString": "contract InterestRateModel"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1614,
                        "name": "initialExchangeRateMantissa_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "1176:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1615,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1597,
                        "src": "1206:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1616,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1599,
                        "src": "1213:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1617,
                        "name": "decimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1601,
                        "src": "1222:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ComptrollerInterface_$10972",
                          "typeString": "contract ComptrollerInterface"
                        },
                        {
                          "typeIdentifier": "t_contract$_InterestRateModel_$14546",
                          "typeString": "contract InterestRateModel"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1611,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2078,
                      "src": "1131:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ComptrollerInterface_$10972_$_t_contract$_InterestRateModel_$14546_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (contract ComptrollerInterface,contract InterestRateModel,uint256,string memory,string memory,uint8)"
                      }
                    },
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1131:101:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1619,
                  "nodeType": "ExpressionStatement",
                  "src": "1131:101:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1620,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5485,
                      "src": "1310:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1621,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1603,
                      "src": "1318:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1310:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1623,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:14:5"
                }
              ]
            },
            "documentation": "@notice Construct a new CEther money market\n@param comptroller_ The address of the Comptroller\n@param interestRateModel_ The address of the interest rate model\n@param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\n@param name_ ERC-20 name of this token\n@param symbol_ ERC-20 symbol of this token\n@param decimals_ ERC-20 decimal precision of this token\n@param admin_ Address of the administrator of this token",
            "id": 1625,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1591,
                  "name": "comptroller_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "720:33:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ComptrollerInterface_$10972",
                    "typeString": "contract ComptrollerInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1590,
                    "name": "ComptrollerInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10972,
                    "src": "720:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerInterface_$10972",
                      "typeString": "contract ComptrollerInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1593,
                  "name": "interestRateModel_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "772:36:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InterestRateModel_$14546",
                    "typeString": "contract InterestRateModel"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1592,
                    "name": "InterestRateModel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 14546,
                    "src": "772:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InterestRateModel_$14546",
                      "typeString": "contract InterestRateModel"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1595,
                  "name": "initialExchangeRateMantissa_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "827:33:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1597,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "879:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1599,
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "917:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1601,
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "957:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1600,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1603,
                  "name": "admin_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "991:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "719:295:5"
            },
            "returnParameters": {
              "id": 1605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1022:0:5"
            },
            "scope": 1960,
            "src": "708:624:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1640,
              "nodeType": "Block",
              "src": "1551:101:5",
              "statements": [
                {
                  "assignments": [
                    1629,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1629,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1640,
                      "src": "1563:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1628,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1563:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1634,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1631,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17411,
                          "src": "1589:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1589:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1630,
                      "name": "mintInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3134,
                      "src": "1576:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1576:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1562:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1636,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1629,
                        "src": "1625:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206661696c6564",
                        "id": 1637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1630:13:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        },
                        "value": "mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        }
                      ],
                      "id": 1635,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "1610:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1610:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1639,
                  "nodeType": "ExpressionStatement",
                  "src": "1610:34:5"
                }
              ]
            },
            "documentation": "@notice Sender supplies assets into the market and receives cTokens in exchange\n@dev Reverts upon any failure",
            "id": 1641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1531:2:5"
            },
            "returnParameters": {
              "id": 1627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1551:0:5"
            },
            "scope": 1960,
            "src": "1518:134:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1652,
              "nodeType": "Block",
              "src": "2062:54:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1649,
                        "name": "redeemTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1643,
                        "src": "2095:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1648,
                      "name": "redeemInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3403,
                      "src": "2080:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1647,
                  "id": 1651,
                  "nodeType": "Return",
                  "src": "2073:35:5"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for the underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemTokens The number of cTokens to redeem into underlying\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 1653,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1643,
                  "name": "redeemTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "2019:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1642,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2018:19:5"
            },
            "returnParameters": {
              "id": 1647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1646,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "2056:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1645,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2056:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2055:6:5"
            },
            "scope": 1960,
            "src": "2003:113:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1664,
              "nodeType": "Block",
              "src": "2541:64:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1661,
                        "name": "redeemAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "2584:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1660,
                      "name": "redeemUnderlyingInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3441,
                      "src": "2559:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2559:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1659,
                  "id": 1663,
                  "nodeType": "Return",
                  "src": "2552:45:5"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for a specified amount of underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemAmount The amount of underlying to redeem\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 1665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1655,
                  "name": "redeemAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1665,
                  "src": "2498:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1654,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2498:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2497:19:5"
            },
            "returnParameters": {
              "id": 1659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1658,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1665,
                  "src": "2535:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1657,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2534:6:5"
            },
            "scope": 1960,
            "src": "2472:133:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1676,
              "nodeType": "Block",
              "src": "2932:54:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1673,
                        "name": "borrowAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1667,
                        "src": "2965:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1672,
                      "name": "borrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3800,
                      "src": "2950:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2950:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1671,
                  "id": 1675,
                  "nodeType": "Return",
                  "src": "2943:35:5"
                }
              ]
            },
            "documentation": "@notice Sender borrows assets from the protocol to their own address\n@param borrowAmount The amount of the underlying asset to borrow\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 1677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1667,
                  "name": "borrowAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "2889:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1666,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2889:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2888:19:5"
            },
            "returnParameters": {
              "id": 1671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1670,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "2926:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1669,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2926:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2925:6:5"
            },
            "scope": 1960,
            "src": "2873:113:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1692,
              "nodeType": "Block",
              "src": "3137:115:5",
              "statements": [
                {
                  "assignments": [
                    1681,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1681,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1692,
                      "src": "3149:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1680,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3149:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1686,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1683,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17411,
                          "src": "3182:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3182:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1682,
                      "name": "repayBorrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4054,
                      "src": "3162:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3162:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3148:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1688,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "3218:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265706179426f72726f77206661696c6564",
                        "id": 1689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3223:20:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbc0320030fd505143f94463969fe29ebd4f928aabfd0cbc88253079d4c076d1",
                          "typeString": "literal_string \"repayBorrow failed\""
                        },
                        "value": "repayBorrow failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbc0320030fd505143f94463969fe29ebd4f928aabfd0cbc88253079d4c076d1",
                          "typeString": "literal_string \"repayBorrow failed\""
                        }
                      ],
                      "id": 1687,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "3203:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3203:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1691,
                  "nodeType": "ExpressionStatement",
                  "src": "3203:41:5"
                }
              ]
            },
            "documentation": "@notice Sender repays their own borrow\n@dev Reverts upon any failure",
            "id": 1693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3117:2:5"
            },
            "returnParameters": {
              "id": 1679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3137:0:5"
            },
            "scope": 1960,
            "src": "3097:155:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1711,
              "nodeType": "Block",
              "src": "3505:137:5",
              "statements": [
                {
                  "assignments": [
                    1699,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1699,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "3517:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1698,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3517:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1705,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1701,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1695,
                        "src": "3556:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1702,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17411,
                          "src": "3566:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3566:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1700,
                      "name": "repayBorrowBehalfInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4098,
                      "src": "3530:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3530:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3516:60:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1707,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1699,
                        "src": "3602:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265706179426f72726f77426568616c66206661696c6564",
                        "id": 1708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3607:26:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4691b01e3c08567469097176368c23bcb592f788fefdc9ffd84d4c950b22ec5",
                          "typeString": "literal_string \"repayBorrowBehalf failed\""
                        },
                        "value": "repayBorrowBehalf failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4691b01e3c08567469097176368c23bcb592f788fefdc9ffd84d4c950b22ec5",
                          "typeString": "literal_string \"repayBorrowBehalf failed\""
                        }
                      ],
                      "id": 1706,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "3587:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3587:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1710,
                  "nodeType": "ExpressionStatement",
                  "src": "3587:47:5"
                }
              ]
            },
            "documentation": "@notice Sender repays a borrow belonging to borrower\n@dev Reverts upon any failure\n@param borrower the account with the debt being payed off",
            "id": 1712,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrowBehalf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1695,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "3470:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3470:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3469:18:5"
            },
            "returnParameters": {
              "id": 1697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3505:0:5"
            },
            "scope": 1960,
            "src": "3443:199:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1733,
              "nodeType": "Block",
              "src": "4079:151:5",
              "statements": [
                {
                  "assignments": [
                    1720,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1720,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1733,
                      "src": "4091:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1719,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4091:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1727,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1722,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "4128:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1723,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17411,
                          "src": "4138:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4138:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1725,
                        "name": "cTokenCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "4149:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CToken_$5465",
                          "typeString": "contract CToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_CToken_$5465",
                          "typeString": "contract CToken"
                        }
                      ],
                      "id": 1721,
                      "name": "liquidateBorrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4415,
                      "src": "4104:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_CTokenInterface_$5826_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,contract CTokenInterface) returns (uint256,uint256)"
                      }
                    },
                    "id": 1726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4104:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4090:76:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1729,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1720,
                        "src": "4192:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6971756964617465426f72726f77206661696c6564",
                        "id": 1730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4197:24:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8368d8c1033f63b0f7ff0ee8a8a85b929ea25bfefeb6e5f20dd14cd9fcea3868",
                          "typeString": "literal_string \"liquidateBorrow failed\""
                        },
                        "value": "liquidateBorrow failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8368d8c1033f63b0f7ff0ee8a8a85b929ea25bfefeb6e5f20dd14cd9fcea3868",
                          "typeString": "literal_string \"liquidateBorrow failed\""
                        }
                      ],
                      "id": 1728,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "4177:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4177:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1732,
                  "nodeType": "ExpressionStatement",
                  "src": "4177:45:5"
                }
              ]
            },
            "documentation": "@notice The sender liquidates the borrowers collateral.\n The collateral seized is transferred to the liquidator.\n@dev Reverts upon any failure\n@param borrower The borrower of this cToken to be liquidated\n@param cTokenCollateral The market in which to seize collateral from the borrower",
            "id": 1734,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1714,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1734,
                  "src": "4019:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1716,
                  "name": "cTokenCollateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 1734,
                  "src": "4037:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CToken_$5465",
                    "typeString": "contract CToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1715,
                    "name": "CToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5465,
                    "src": "4037:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CToken_$5465",
                      "typeString": "contract CToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4018:43:5"
            },
            "returnParameters": {
              "id": 1718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4079:0:5"
            },
            "scope": 1960,
            "src": "3994:236:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1749,
              "nodeType": "Block",
              "src": "4330:101:5",
              "statements": [
                {
                  "assignments": [
                    1738,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1738,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1749,
                      "src": "4342:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1737,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4342:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1743,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1740,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17411,
                          "src": "4368:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4368:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1739,
                      "name": "mintInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3134,
                      "src": "4355:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4355:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4341:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1745,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1738,
                        "src": "4404:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206661696c6564",
                        "id": 1746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4409:13:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        },
                        "value": "mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        }
                      ],
                      "id": 1744,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "4389:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4389:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1748,
                  "nodeType": "ExpressionStatement",
                  "src": "4389:34:5"
                }
              ]
            },
            "documentation": "@notice Send Ether to CEther to mint",
            "id": 1750,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4310:2:5"
            },
            "returnParameters": {
              "id": 1736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4330:0:5"
            },
            "scope": 1960,
            "src": "4301:130:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1777,
              "nodeType": "Block",
              "src": "4752:178:5",
              "statements": [
                {
                  "assignments": [
                    1756,
                    1758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1756,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1777,
                      "src": "4764:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MathError_$5933",
                        "typeString": "enum CarefulMath.MathError"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1755,
                        "name": "MathError",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5933,
                        "src": "4764:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MathError_$5933",
                          "typeString": "enum CarefulMath.MathError"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1758,
                      "name": "startingBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1777,
                      "src": "4779:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1757,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4779:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1767,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1761,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17475,
                              "src": "4819:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CEther_$1960",
                                "typeString": "contract CEther"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CEther_$1960",
                                "typeString": "contract CEther"
                              }
                            ],
                            "id": 1760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4811:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4811:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4811:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1764,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17411,
                          "src": "4834:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4834:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1759,
                      "name": "subUInt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6038,
                      "src": "4803:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_enum$_MathError_$5933_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (enum CarefulMath.MathError,uint256)"
                      }
                    },
                    "id": 1766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4803:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_MathError_$5933_$_t_uint256_$",
                      "typeString": "tuple(enum CarefulMath.MathError,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4763:81:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_MathError_$5933",
                          "typeString": "enum CarefulMath.MathError"
                        },
                        "id": 1772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1769,
                          "name": "err",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1756,
                          "src": "4863:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MathError_$5933",
                            "typeString": "enum CarefulMath.MathError"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1770,
                            "name": "MathError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5933,
                            "src": "4870:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_MathError_$5933_$",
                              "typeString": "type(enum CarefulMath.MathError)"
                            }
                          },
                          "id": 1771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NO_ERROR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4870:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MathError_$5933",
                            "typeString": "enum CarefulMath.MathError"
                          }
                        },
                        "src": "4863:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1768,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17414,
                        17415
                      ],
                      "referencedDeclaration": 17414,
                      "src": "4855:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4855:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1774,
                  "nodeType": "ExpressionStatement",
                  "src": "4855:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1775,
                    "name": "startingBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1758,
                    "src": "4907:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1754,
                  "id": 1776,
                  "nodeType": "Return",
                  "src": "4900:22:5"
                }
              ]
            },
            "documentation": "@notice Gets balance of this contract in terms of Ether, before this message\n@dev This excludes the value of the current message, if any\n@return The quantity of Ether owned by this contract",
            "id": 1778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCashPrior",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4720:2:5"
            },
            "returnParameters": {
              "id": 1754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1753,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1778,
                  "src": "4746:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4746:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4745:6:5"
            },
            "scope": 1960,
            "src": "4699:231:5",
            "stateMutability": "view",
            "superFunction": 5431,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1805,
              "nodeType": "Block",
              "src": "5244:172:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1788,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17411,
                            "src": "5289:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5289:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1790,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1780,
                          "src": "5303:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5289:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e646572206d69736d61746368",
                        "id": 1792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5309:17:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        },
                        "value": "sender mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        }
                      ],
                      "id": 1787,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17414,
                        17415
                      ],
                      "referencedDeclaration": 17415,
                      "src": "5281:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1794,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:46:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1796,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17411,
                            "src": "5346:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5346:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1798,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1782,
                          "src": "5359:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5346:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c7565206d69736d61746368",
                        "id": 1800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5367:16:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        },
                        "value": "value mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        }
                      ],
                      "id": 1795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17414,
                        17415
                      ],
                      "referencedDeclaration": 17415,
                      "src": "5338:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5338:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1802,
                  "nodeType": "ExpressionStatement",
                  "src": "5338:46:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1803,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1782,
                    "src": "5402:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1786,
                  "id": 1804,
                  "nodeType": "Return",
                  "src": "5395:13:5"
                }
              ]
            },
            "documentation": "@notice Perform the actual transfer in, which is a no-op\n@param from Address sending the Ether\n@param amount Amount of Ether being sent\n@return The actual amount of Ether transferred",
            "id": 1806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferIn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1780,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1806,
                  "src": "5193:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5193:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1782,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1806,
                  "src": "5207:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1781,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5207:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5192:27:5"
            },
            "returnParameters": {
              "id": 1786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1785,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1806,
                  "src": "5238:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1784,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5238:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5237:6:5"
            },
            "scope": 1960,
            "src": "5171:245:5",
            "stateMutability": "nonpayable",
            "superFunction": 5440,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1819,
              "nodeType": "Block",
              "src": "5489:108:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1816,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1810,
                        "src": "5582:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1813,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1808,
                        "src": "5570:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5570:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5570:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1818,
                  "nodeType": "ExpressionStatement",
                  "src": "5570:19:5"
                }
              ]
            },
            "documentation": null,
            "id": 1820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferOut",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1808,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1820,
                  "src": "5447:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5447:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1810,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1820,
                  "src": "5467:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1809,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5467:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5446:33:5"
            },
            "returnParameters": {
              "id": 1812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5489:0:5"
            },
            "scope": 1960,
            "src": "5424:173:5",
            "stateMutability": "nonpayable",
            "superFunction": 5447,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1958,
              "nodeType": "Block",
              "src": "5680:637:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1827,
                      "name": "errCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1822,
                      "src": "5695:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1829,
                            "name": "Error",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11566,
                            "src": "5711:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Error_$11566_$",
                              "typeString": "type(enum TokenErrorReporter.Error)"
                            }
                          },
                          "id": 1830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NO_ERROR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5711:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$11566",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Error_$11566",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        ],
                        "id": 1828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5706:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 1831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5706:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5695:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1835,
                  "nodeType": "IfStatement",
                  "src": "5691:70:5",
                  "trueBody": {
                    "id": 1834,
                    "nodeType": "Block",
                    "src": "5728:33:5",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 1826,
                        "id": 1833,
                        "nodeType": "Return",
                        "src": "5743:7:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1837,
                      "name": "fullMessage",
                      "nodeType": "VariableDeclaration",
                      "scope": 1958,
                      "src": "5773:24:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1836,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5773:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1847,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1841,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1824,
                                "src": "5816:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5810:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5810:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5810:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 1844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5834:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "5810:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5800:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 1838,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5804:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 1846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5800:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5773:63:5"
                },
                {
                  "assignments": [
                    1849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1849,
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "scope": 1958,
                      "src": "5847:6:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1848,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5847:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1850,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5847:6:5"
                },
                {
                  "body": {
                    "id": 1874,
                    "nodeType": "Block",
                    "src": "5910:61:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1864,
                              "name": "fullMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1837,
                              "src": "5925:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1866,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1865,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1849,
                              "src": "5937:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5925:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1868,
                                  "name": "message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1824,
                                  "src": "5948:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5942:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": "bytes"
                              },
                              "id": 1869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5942:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1871,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1870,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1849,
                              "src": "5957:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5942:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "5925:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 1873,
                        "nodeType": "ExpressionStatement",
                        "src": "5925:34:5"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1855,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1849,
                      "src": "5878:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1857,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1824,
                            "src": "5888:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5882:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 1858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5882:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5882:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5878:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1875,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1851,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1849,
                        "src": "5871:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5875:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5871:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1854,
                    "nodeType": "ExpressionStatement",
                    "src": "5871:5:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5905:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1861,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1849,
                        "src": "5905:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1863,
                    "nodeType": "ExpressionStatement",
                    "src": "5905:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "5866:105:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1876,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5983:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1880,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1877,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "5995:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5997:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5995:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5983:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3332",
                              "id": 1883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6013:2:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              }
                            ],
                            "id": 1882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6007:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6007:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6002:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6002:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "5983:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1887,
                  "nodeType": "ExpressionStatement",
                  "src": "5983:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1888,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6028:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1892,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1889,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "6040:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6042:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6040:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6028:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3430",
                              "id": 1895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6058:2:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              },
                              "value": "40"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              }
                            ],
                            "id": 1894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6052:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6052:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6047:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6047:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6028:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1899,
                  "nodeType": "ExpressionStatement",
                  "src": "6028:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1900,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6073:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1904,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1901,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "6085:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6087:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6085:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6073:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3438",
                                "id": 1907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6103:2:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1910,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 1908,
                                      "name": "errCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1822,
                                      "src": "6110:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 1909,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6120:2:5",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "6110:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1911,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6108:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6103:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6097:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6097:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6092:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6092:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6073:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1916,
                  "nodeType": "ExpressionStatement",
                  "src": "6073:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1917,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6137:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1921,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1918,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "6149:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 1919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6151:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "6149:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6137:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3438",
                                "id": 1924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6167:2:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1927,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 1925,
                                      "name": "errCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1822,
                                      "src": "6174:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "%",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 1926,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6184:2:5",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "6174:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1928,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6172:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6167:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6161:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6161:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6156:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6156:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6137:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1933,
                  "nodeType": "ExpressionStatement",
                  "src": "6137:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1934,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6201:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1938,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1935,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "6213:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 1936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6215:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "6213:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6201:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3431",
                              "id": 1941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6231:2:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_41_by_1",
                                "typeString": "int_const 41"
                              },
                              "value": "41"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_41_by_1",
                                "typeString": "int_const 41"
                              }
                            ],
                            "id": 1940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6225:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6225:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6220:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6220:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6201:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1945,
                  "nodeType": "ExpressionStatement",
                  "src": "6201:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1947,
                          "name": "errCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1822,
                          "src": "6256:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1949,
                                "name": "Error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11566,
                                "src": "6272:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Error_$11566_$",
                                  "typeString": "type(enum TokenErrorReporter.Error)"
                                }
                              },
                              "id": 1950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NO_ERROR",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6272:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$11566",
                                "typeString": "enum TokenErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$11566",
                                "typeString": "enum TokenErrorReporter.Error"
                              }
                            ],
                            "id": 1948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6267:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 1951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6267:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6256:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1954,
                            "name": "fullMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1837,
                            "src": "6296:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6289:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": "string"
                        },
                        "id": 1955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6289:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17414,
                        17415
                      ],
                      "referencedDeclaration": 17415,
                      "src": "6248:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6248:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1957,
                  "nodeType": "ExpressionStatement",
                  "src": "6248:61:5"
                }
              ]
            },
            "documentation": null,
            "id": 1959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requireNoError",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1822,
                  "name": "errCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1959,
                  "src": "5629:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1821,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5629:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1824,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 1959,
                  "src": "5643:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5643:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5628:37:5"
            },
            "returnParameters": {
              "id": 1826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5680:0:5"
            },
            "scope": 1960,
            "src": "5605:712:5",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1961,
        "src": "160:6160:5"
      }
    ],
    "src": "0:6322:5"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/CEther.sol",
    "exportedSymbols": {
      "CEther": [
        1960
      ]
    },
    "id": 1961,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1586,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/C/Users/pillardev/Desktop/Compound2.0/compoundv2/contracts/CToken.sol",
        "file": "./CToken.sol",
        "id": 1587,
        "nodeType": "ImportDirective",
        "scope": 1961,
        "sourceUnit": 5466,
        "src": "28:22:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1588,
              "name": "CToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5465,
              "src": "179:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CToken_$5465",
                "typeString": "contract CToken"
              }
            },
            "id": 1589,
            "nodeType": "InheritanceSpecifier",
            "src": "179:6:5"
          }
        ],
        "contractDependencies": [
          5465,
          5525,
          5826,
          6111,
          11707,
          12314
        ],
        "contractKind": "contract",
        "documentation": "@title Compound's CEther Contract\n@notice CToken which wraps Ether\n@author Compound",
        "fullyImplemented": true,
        "id": 1960,
        "linearizedBaseContracts": [
          1960,
          5465,
          11707,
          12314,
          6111,
          5826,
          5525
        ],
        "name": "CEther",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1624,
              "nodeType": "Block",
              "src": "1022:310:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1606,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5485,
                      "src": "1100:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1607,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17411,
                        "src": "1108:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1108:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1100:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1610,
                  "nodeType": "ExpressionStatement",
                  "src": "1100:18:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1612,
                        "name": "comptroller_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "1142:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComptrollerInterface_$10972",
                          "typeString": "contract ComptrollerInterface"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1613,
                        "name": "interestRateModel_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1593,
                        "src": "1156:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InterestRateModel_$14546",
                          "typeString": "contract InterestRateModel"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1614,
                        "name": "initialExchangeRateMantissa_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "1176:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1615,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1597,
                        "src": "1206:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1616,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1599,
                        "src": "1213:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1617,
                        "name": "decimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1601,
                        "src": "1222:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ComptrollerInterface_$10972",
                          "typeString": "contract ComptrollerInterface"
                        },
                        {
                          "typeIdentifier": "t_contract$_InterestRateModel_$14546",
                          "typeString": "contract InterestRateModel"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1611,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2078,
                      "src": "1131:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ComptrollerInterface_$10972_$_t_contract$_InterestRateModel_$14546_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (contract ComptrollerInterface,contract InterestRateModel,uint256,string memory,string memory,uint8)"
                      }
                    },
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1131:101:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1619,
                  "nodeType": "ExpressionStatement",
                  "src": "1131:101:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1620,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5485,
                      "src": "1310:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1621,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1603,
                      "src": "1318:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1310:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1623,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:14:5"
                }
              ]
            },
            "documentation": "@notice Construct a new CEther money market\n@param comptroller_ The address of the Comptroller\n@param interestRateModel_ The address of the interest rate model\n@param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\n@param name_ ERC-20 name of this token\n@param symbol_ ERC-20 symbol of this token\n@param decimals_ ERC-20 decimal precision of this token\n@param admin_ Address of the administrator of this token",
            "id": 1625,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1591,
                  "name": "comptroller_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "720:33:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ComptrollerInterface_$10972",
                    "typeString": "contract ComptrollerInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1590,
                    "name": "ComptrollerInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10972,
                    "src": "720:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerInterface_$10972",
                      "typeString": "contract ComptrollerInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1593,
                  "name": "interestRateModel_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "772:36:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InterestRateModel_$14546",
                    "typeString": "contract InterestRateModel"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1592,
                    "name": "InterestRateModel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 14546,
                    "src": "772:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InterestRateModel_$14546",
                      "typeString": "contract InterestRateModel"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1595,
                  "name": "initialExchangeRateMantissa_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "827:33:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1597,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "879:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1599,
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "917:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1601,
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "957:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1600,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1603,
                  "name": "admin_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "991:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "719:295:5"
            },
            "returnParameters": {
              "id": 1605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1022:0:5"
            },
            "scope": 1960,
            "src": "708:624:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1640,
              "nodeType": "Block",
              "src": "1551:101:5",
              "statements": [
                {
                  "assignments": [
                    1629,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1629,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1640,
                      "src": "1563:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1628,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1563:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1634,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1631,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17411,
                          "src": "1589:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1589:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1630,
                      "name": "mintInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3134,
                      "src": "1576:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1576:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1562:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1636,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1629,
                        "src": "1625:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206661696c6564",
                        "id": 1637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1630:13:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        },
                        "value": "mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        }
                      ],
                      "id": 1635,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "1610:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1610:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1639,
                  "nodeType": "ExpressionStatement",
                  "src": "1610:34:5"
                }
              ]
            },
            "documentation": "@notice Sender supplies assets into the market and receives cTokens in exchange\n@dev Reverts upon any failure",
            "id": 1641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1531:2:5"
            },
            "returnParameters": {
              "id": 1627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1551:0:5"
            },
            "scope": 1960,
            "src": "1518:134:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1652,
              "nodeType": "Block",
              "src": "2062:54:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1649,
                        "name": "redeemTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1643,
                        "src": "2095:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1648,
                      "name": "redeemInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3403,
                      "src": "2080:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1647,
                  "id": 1651,
                  "nodeType": "Return",
                  "src": "2073:35:5"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for the underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemTokens The number of cTokens to redeem into underlying\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 1653,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1643,
                  "name": "redeemTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "2019:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1642,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2018:19:5"
            },
            "returnParameters": {
              "id": 1647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1646,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "2056:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1645,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2056:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2055:6:5"
            },
            "scope": 1960,
            "src": "2003:113:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1664,
              "nodeType": "Block",
              "src": "2541:64:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1661,
                        "name": "redeemAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "2584:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1660,
                      "name": "redeemUnderlyingInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3441,
                      "src": "2559:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2559:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1659,
                  "id": 1663,
                  "nodeType": "Return",
                  "src": "2552:45:5"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for a specified amount of underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemAmount The amount of underlying to redeem\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 1665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1655,
                  "name": "redeemAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1665,
                  "src": "2498:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1654,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2498:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2497:19:5"
            },
            "returnParameters": {
              "id": 1659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1658,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1665,
                  "src": "2535:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1657,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2534:6:5"
            },
            "scope": 1960,
            "src": "2472:133:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1676,
              "nodeType": "Block",
              "src": "2932:54:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1673,
                        "name": "borrowAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1667,
                        "src": "2965:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1672,
                      "name": "borrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3800,
                      "src": "2950:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2950:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1671,
                  "id": 1675,
                  "nodeType": "Return",
                  "src": "2943:35:5"
                }
              ]
            },
            "documentation": "@notice Sender borrows assets from the protocol to their own address\n@param borrowAmount The amount of the underlying asset to borrow\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 1677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1667,
                  "name": "borrowAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "2889:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1666,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2889:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2888:19:5"
            },
            "returnParameters": {
              "id": 1671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1670,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "2926:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1669,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2926:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2925:6:5"
            },
            "scope": 1960,
            "src": "2873:113:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1692,
              "nodeType": "Block",
              "src": "3137:115:5",
              "statements": [
                {
                  "assignments": [
                    1681,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1681,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1692,
                      "src": "3149:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1680,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3149:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1686,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1683,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17411,
                          "src": "3182:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3182:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1682,
                      "name": "repayBorrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4054,
                      "src": "3162:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3162:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3148:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1688,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "3218:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265706179426f72726f77206661696c6564",
                        "id": 1689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3223:20:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbc0320030fd505143f94463969fe29ebd4f928aabfd0cbc88253079d4c076d1",
                          "typeString": "literal_string \"repayBorrow failed\""
                        },
                        "value": "repayBorrow failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbc0320030fd505143f94463969fe29ebd4f928aabfd0cbc88253079d4c076d1",
                          "typeString": "literal_string \"repayBorrow failed\""
                        }
                      ],
                      "id": 1687,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "3203:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3203:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1691,
                  "nodeType": "ExpressionStatement",
                  "src": "3203:41:5"
                }
              ]
            },
            "documentation": "@notice Sender repays their own borrow\n@dev Reverts upon any failure",
            "id": 1693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3117:2:5"
            },
            "returnParameters": {
              "id": 1679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3137:0:5"
            },
            "scope": 1960,
            "src": "3097:155:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1711,
              "nodeType": "Block",
              "src": "3505:137:5",
              "statements": [
                {
                  "assignments": [
                    1699,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1699,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "3517:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1698,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3517:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1705,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1701,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1695,
                        "src": "3556:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1702,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17411,
                          "src": "3566:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3566:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1700,
                      "name": "repayBorrowBehalfInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4098,
                      "src": "3530:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3530:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3516:60:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1707,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1699,
                        "src": "3602:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265706179426f72726f77426568616c66206661696c6564",
                        "id": 1708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3607:26:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4691b01e3c08567469097176368c23bcb592f788fefdc9ffd84d4c950b22ec5",
                          "typeString": "literal_string \"repayBorrowBehalf failed\""
                        },
                        "value": "repayBorrowBehalf failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4691b01e3c08567469097176368c23bcb592f788fefdc9ffd84d4c950b22ec5",
                          "typeString": "literal_string \"repayBorrowBehalf failed\""
                        }
                      ],
                      "id": 1706,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "3587:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3587:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1710,
                  "nodeType": "ExpressionStatement",
                  "src": "3587:47:5"
                }
              ]
            },
            "documentation": "@notice Sender repays a borrow belonging to borrower\n@dev Reverts upon any failure\n@param borrower the account with the debt being payed off",
            "id": 1712,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrowBehalf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1695,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "3470:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3470:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3469:18:5"
            },
            "returnParameters": {
              "id": 1697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3505:0:5"
            },
            "scope": 1960,
            "src": "3443:199:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1733,
              "nodeType": "Block",
              "src": "4079:151:5",
              "statements": [
                {
                  "assignments": [
                    1720,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1720,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1733,
                      "src": "4091:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1719,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4091:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1727,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1722,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "4128:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1723,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17411,
                          "src": "4138:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4138:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1725,
                        "name": "cTokenCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "4149:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CToken_$5465",
                          "typeString": "contract CToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_CToken_$5465",
                          "typeString": "contract CToken"
                        }
                      ],
                      "id": 1721,
                      "name": "liquidateBorrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4415,
                      "src": "4104:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_CTokenInterface_$5826_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,contract CTokenInterface) returns (uint256,uint256)"
                      }
                    },
                    "id": 1726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4104:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4090:76:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1729,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1720,
                        "src": "4192:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6971756964617465426f72726f77206661696c6564",
                        "id": 1730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4197:24:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8368d8c1033f63b0f7ff0ee8a8a85b929ea25bfefeb6e5f20dd14cd9fcea3868",
                          "typeString": "literal_string \"liquidateBorrow failed\""
                        },
                        "value": "liquidateBorrow failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8368d8c1033f63b0f7ff0ee8a8a85b929ea25bfefeb6e5f20dd14cd9fcea3868",
                          "typeString": "literal_string \"liquidateBorrow failed\""
                        }
                      ],
                      "id": 1728,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "4177:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4177:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1732,
                  "nodeType": "ExpressionStatement",
                  "src": "4177:45:5"
                }
              ]
            },
            "documentation": "@notice The sender liquidates the borrowers collateral.\n The collateral seized is transferred to the liquidator.\n@dev Reverts upon any failure\n@param borrower The borrower of this cToken to be liquidated\n@param cTokenCollateral The market in which to seize collateral from the borrower",
            "id": 1734,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1714,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1734,
                  "src": "4019:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1716,
                  "name": "cTokenCollateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 1734,
                  "src": "4037:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CToken_$5465",
                    "typeString": "contract CToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1715,
                    "name": "CToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5465,
                    "src": "4037:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CToken_$5465",
                      "typeString": "contract CToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4018:43:5"
            },
            "returnParameters": {
              "id": 1718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4079:0:5"
            },
            "scope": 1960,
            "src": "3994:236:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1749,
              "nodeType": "Block",
              "src": "4330:101:5",
              "statements": [
                {
                  "assignments": [
                    1738,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1738,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1749,
                      "src": "4342:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1737,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4342:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1743,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1740,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17411,
                          "src": "4368:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4368:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1739,
                      "name": "mintInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3134,
                      "src": "4355:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4355:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4341:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1745,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1738,
                        "src": "4404:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206661696c6564",
                        "id": 1746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4409:13:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        },
                        "value": "mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        }
                      ],
                      "id": 1744,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "4389:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4389:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1748,
                  "nodeType": "ExpressionStatement",
                  "src": "4389:34:5"
                }
              ]
            },
            "documentation": "@notice Send Ether to CEther to mint",
            "id": 1750,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4310:2:5"
            },
            "returnParameters": {
              "id": 1736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4330:0:5"
            },
            "scope": 1960,
            "src": "4301:130:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1777,
              "nodeType": "Block",
              "src": "4752:178:5",
              "statements": [
                {
                  "assignments": [
                    1756,
                    1758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1756,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1777,
                      "src": "4764:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MathError_$5933",
                        "typeString": "enum CarefulMath.MathError"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1755,
                        "name": "MathError",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5933,
                        "src": "4764:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MathError_$5933",
                          "typeString": "enum CarefulMath.MathError"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1758,
                      "name": "startingBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1777,
                      "src": "4779:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1757,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4779:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1767,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1761,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17475,
                              "src": "4819:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CEther_$1960",
                                "typeString": "contract CEther"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CEther_$1960",
                                "typeString": "contract CEther"
                              }
                            ],
                            "id": 1760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4811:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4811:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4811:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1764,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17411,
                          "src": "4834:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4834:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1759,
                      "name": "subUInt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6038,
                      "src": "4803:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_enum$_MathError_$5933_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (enum CarefulMath.MathError,uint256)"
                      }
                    },
                    "id": 1766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4803:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_MathError_$5933_$_t_uint256_$",
                      "typeString": "tuple(enum CarefulMath.MathError,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4763:81:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_MathError_$5933",
                          "typeString": "enum CarefulMath.MathError"
                        },
                        "id": 1772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1769,
                          "name": "err",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1756,
                          "src": "4863:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MathError_$5933",
                            "typeString": "enum CarefulMath.MathError"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1770,
                            "name": "MathError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5933,
                            "src": "4870:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_MathError_$5933_$",
                              "typeString": "type(enum CarefulMath.MathError)"
                            }
                          },
                          "id": 1771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NO_ERROR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4870:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MathError_$5933",
                            "typeString": "enum CarefulMath.MathError"
                          }
                        },
                        "src": "4863:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1768,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17414,
                        17415
                      ],
                      "referencedDeclaration": 17414,
                      "src": "4855:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4855:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1774,
                  "nodeType": "ExpressionStatement",
                  "src": "4855:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1775,
                    "name": "startingBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1758,
                    "src": "4907:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1754,
                  "id": 1776,
                  "nodeType": "Return",
                  "src": "4900:22:5"
                }
              ]
            },
            "documentation": "@notice Gets balance of this contract in terms of Ether, before this message\n@dev This excludes the value of the current message, if any\n@return The quantity of Ether owned by this contract",
            "id": 1778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCashPrior",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4720:2:5"
            },
            "returnParameters": {
              "id": 1754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1753,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1778,
                  "src": "4746:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4746:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4745:6:5"
            },
            "scope": 1960,
            "src": "4699:231:5",
            "stateMutability": "view",
            "superFunction": 5431,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1805,
              "nodeType": "Block",
              "src": "5244:172:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1788,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17411,
                            "src": "5289:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5289:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1790,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1780,
                          "src": "5303:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5289:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e646572206d69736d61746368",
                        "id": 1792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5309:17:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        },
                        "value": "sender mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        }
                      ],
                      "id": 1787,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17414,
                        17415
                      ],
                      "referencedDeclaration": 17415,
                      "src": "5281:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1794,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:46:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1796,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17411,
                            "src": "5346:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5346:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1798,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1782,
                          "src": "5359:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5346:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c7565206d69736d61746368",
                        "id": 1800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5367:16:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        },
                        "value": "value mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        }
                      ],
                      "id": 1795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17414,
                        17415
                      ],
                      "referencedDeclaration": 17415,
                      "src": "5338:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5338:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1802,
                  "nodeType": "ExpressionStatement",
                  "src": "5338:46:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1803,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1782,
                    "src": "5402:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1786,
                  "id": 1804,
                  "nodeType": "Return",
                  "src": "5395:13:5"
                }
              ]
            },
            "documentation": "@notice Perform the actual transfer in, which is a no-op\n@param from Address sending the Ether\n@param amount Amount of Ether being sent\n@return The actual amount of Ether transferred",
            "id": 1806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferIn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1780,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1806,
                  "src": "5193:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5193:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1782,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1806,
                  "src": "5207:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1781,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5207:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5192:27:5"
            },
            "returnParameters": {
              "id": 1786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1785,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1806,
                  "src": "5238:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1784,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5238:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5237:6:5"
            },
            "scope": 1960,
            "src": "5171:245:5",
            "stateMutability": "nonpayable",
            "superFunction": 5440,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1819,
              "nodeType": "Block",
              "src": "5489:108:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1816,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1810,
                        "src": "5582:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1813,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1808,
                        "src": "5570:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5570:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5570:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1818,
                  "nodeType": "ExpressionStatement",
                  "src": "5570:19:5"
                }
              ]
            },
            "documentation": null,
            "id": 1820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferOut",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1808,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1820,
                  "src": "5447:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5447:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1810,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1820,
                  "src": "5467:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1809,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5467:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5446:33:5"
            },
            "returnParameters": {
              "id": 1812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5489:0:5"
            },
            "scope": 1960,
            "src": "5424:173:5",
            "stateMutability": "nonpayable",
            "superFunction": 5447,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1958,
              "nodeType": "Block",
              "src": "5680:637:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1827,
                      "name": "errCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1822,
                      "src": "5695:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1829,
                            "name": "Error",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11566,
                            "src": "5711:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Error_$11566_$",
                              "typeString": "type(enum TokenErrorReporter.Error)"
                            }
                          },
                          "id": 1830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NO_ERROR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5711:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$11566",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Error_$11566",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        ],
                        "id": 1828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5706:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 1831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5706:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5695:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1835,
                  "nodeType": "IfStatement",
                  "src": "5691:70:5",
                  "trueBody": {
                    "id": 1834,
                    "nodeType": "Block",
                    "src": "5728:33:5",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 1826,
                        "id": 1833,
                        "nodeType": "Return",
                        "src": "5743:7:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1837,
                      "name": "fullMessage",
                      "nodeType": "VariableDeclaration",
                      "scope": 1958,
                      "src": "5773:24:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1836,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5773:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1847,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1841,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1824,
                                "src": "5816:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5810:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5810:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5810:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 1844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5834:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "5810:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5800:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 1838,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5804:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 1846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5800:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5773:63:5"
                },
                {
                  "assignments": [
                    1849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1849,
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "scope": 1958,
                      "src": "5847:6:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1848,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5847:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1850,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5847:6:5"
                },
                {
                  "body": {
                    "id": 1874,
                    "nodeType": "Block",
                    "src": "5910:61:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1864,
                              "name": "fullMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1837,
                              "src": "5925:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1866,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1865,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1849,
                              "src": "5937:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5925:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1868,
                                  "name": "message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1824,
                                  "src": "5948:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5942:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": "bytes"
                              },
                              "id": 1869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5942:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1871,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1870,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1849,
                              "src": "5957:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5942:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "5925:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 1873,
                        "nodeType": "ExpressionStatement",
                        "src": "5925:34:5"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1855,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1849,
                      "src": "5878:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1857,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1824,
                            "src": "5888:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5882:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 1858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5882:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5882:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5878:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1875,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1851,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1849,
                        "src": "5871:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5875:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5871:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1854,
                    "nodeType": "ExpressionStatement",
                    "src": "5871:5:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5905:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1861,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1849,
                        "src": "5905:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1863,
                    "nodeType": "ExpressionStatement",
                    "src": "5905:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "5866:105:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1876,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5983:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1880,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1877,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "5995:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5997:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5995:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5983:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3332",
                              "id": 1883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6013:2:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              }
                            ],
                            "id": 1882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6007:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6007:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6002:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6002:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "5983:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1887,
                  "nodeType": "ExpressionStatement",
                  "src": "5983:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1888,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6028:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1892,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1889,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "6040:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6042:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6040:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6028:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3430",
                              "id": 1895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6058:2:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              },
                              "value": "40"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              }
                            ],
                            "id": 1894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6052:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6052:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6047:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6047:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6028:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1899,
                  "nodeType": "ExpressionStatement",
                  "src": "6028:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1900,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6073:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1904,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1901,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "6085:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6087:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6085:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6073:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3438",
                                "id": 1907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6103:2:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1910,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 1908,
                                      "name": "errCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1822,
                                      "src": "6110:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 1909,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6120:2:5",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "6110:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1911,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6108:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6103:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6097:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6097:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6092:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6092:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6073:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1916,
                  "nodeType": "ExpressionStatement",
                  "src": "6073:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1917,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6137:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1921,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1918,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "6149:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 1919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6151:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "6149:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6137:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3438",
                                "id": 1924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6167:2:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1927,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 1925,
                                      "name": "errCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1822,
                                      "src": "6174:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "%",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 1926,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6184:2:5",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "6174:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1928,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6172:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6167:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6161:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6161:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6156:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6156:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6137:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1933,
                  "nodeType": "ExpressionStatement",
                  "src": "6137:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1934,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6201:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1938,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1935,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "6213:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 1936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6215:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "6213:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6201:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3431",
                              "id": 1941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6231:2:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_41_by_1",
                                "typeString": "int_const 41"
                              },
                              "value": "41"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_41_by_1",
                                "typeString": "int_const 41"
                              }
                            ],
                            "id": 1940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6225:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6225:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6220:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6220:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6201:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1945,
                  "nodeType": "ExpressionStatement",
                  "src": "6201:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1947,
                          "name": "errCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1822,
                          "src": "6256:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1949,
                                "name": "Error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11566,
                                "src": "6272:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Error_$11566_$",
                                  "typeString": "type(enum TokenErrorReporter.Error)"
                                }
                              },
                              "id": 1950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NO_ERROR",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6272:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$11566",
                                "typeString": "enum TokenErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$11566",
                                "typeString": "enum TokenErrorReporter.Error"
                              }
                            ],
                            "id": 1948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6267:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 1951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6267:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6256:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1954,
                            "name": "fullMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1837,
                            "src": "6296:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6289:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": "string"
                        },
                        "id": 1955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6289:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17414,
                        17415
                      ],
                      "referencedDeclaration": 17415,
                      "src": "6248:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6248:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1957,
                  "nodeType": "ExpressionStatement",
                  "src": "6248:61:5"
                }
              ]
            },
            "documentation": null,
            "id": 1959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requireNoError",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1822,
                  "name": "errCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1959,
                  "src": "5629:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1821,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5629:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1824,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 1959,
                  "src": "5643:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5643:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5628:37:5"
            },
            "returnParameters": {
              "id": 1826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5680:0:5"
            },
            "scope": 1960,
            "src": "5605:712:5",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1961,
        "src": "160:6160:5"
      }
    ],
    "src": "0:6322:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-05-11T11:38:56.165Z",
  "devdoc": {
    "author": "Compound",
    "methods": {
      "_acceptAdmin()": {
        "details": "Admin function for pending admin to accept role and update admin",
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_reduceReserves(uint256)": {
        "params": {
          "reduceAmount": "Amount of reduction to reserves"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_setComptroller(address)": {
        "details": "Admin function to set a new comptroller",
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_setInterestRateModel(address)": {
        "details": "Admin function to accrue interest and update the interest rate model",
        "params": {
          "newInterestRateModel": "the new interest rate model to use"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_setPendingAdmin(address)": {
        "details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
        "params": {
          "newPendingAdmin": "New pending admin."
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_setReserveFactor(uint256)": {
        "details": "Admin function to accrue interest and set a new reserve factor",
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "accrueInterest()": {
        "details": "This calculates interest accrued from the last checkpointed block  up to the current block and writes new checkpoint to storage."
      },
      "allowance(address,address)": {
        "params": {
          "owner": "The address of the account which owns the tokens to be spent",
          "spender": "The address of the account which may transfer tokens"
        },
        "return": "The number of tokens allowed to be spent (-1 means infinite)"
      },
      "approve(address,uint256)": {
        "details": "This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
        "params": {
          "amount": "The number of tokens that are approved (-1 means infinite)",
          "spender": "The address of the account which may transfer tokens"
        },
        "return": "Whether or not the approval succeeded"
      },
      "balanceOf(address)": {
        "params": {
          "owner": "The address of the account to query"
        },
        "return": "The number of tokens owned by `owner`"
      },
      "balanceOfUnderlying(address)": {
        "details": "This also accrues interest in a transaction",
        "params": {
          "owner": "The address of the account to query"
        },
        "return": "The amount of underlying owned by `owner`"
      },
      "borrow(uint256)": {
        "params": {
          "borrowAmount": "The amount of the underlying asset to borrow"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "borrowBalanceCurrent(address)": {
        "params": {
          "account": "The address whose balance should be calculated after updating borrowIndex"
        },
        "return": "The calculated balance"
      },
      "borrowBalanceStored(address)": {
        "params": {
          "account": "The address whose balance should be calculated"
        },
        "return": "The calculated balance"
      },
      "borrowRatePerBlock()": {
        "return": "The borrow interest rate per block, scaled by 1e18"
      },
      "constructor": {
        "params": {
          "admin_": "Address of the administrator of this token",
          "comptroller_": "The address of the Comptroller",
          "decimals_": "ERC-20 decimal precision of this token",
          "initialExchangeRateMantissa_": "The initial exchange rate, scaled by 1e18",
          "interestRateModel_": "The address of the interest rate model",
          "name_": "ERC-20 name of this token",
          "symbol_": "ERC-20 symbol of this token"
        }
      },
      "exchangeRateCurrent()": {
        "return": "Calculated exchange rate scaled by 1e18"
      },
      "exchangeRateStored()": {
        "details": "This function does not accrue interest before calculating the exchange rate",
        "return": "Calculated exchange rate scaled by 1e18"
      },
      "getAccountSnapshot(address)": {
        "details": "This is used by comptroller to more efficiently perform liquidity checks.",
        "params": {
          "account": "Address of the account to snapshot"
        },
        "return": "(possible error, token balance, borrow balance, exchange rate mantissa)"
      },
      "getCash()": {
        "return": "The quantity of underlying asset owned by this contract"
      },
      "initialize(address,address,uint256,string,string,uint8)": {
        "params": {
          "comptroller_": "The address of the Comptroller",
          "decimals_": "EIP-20 decimal precision of this token",
          "initialExchangeRateMantissa_": "The initial exchange rate, scaled by 1e18",
          "interestRateModel_": "The address of the interest rate model",
          "name_": "EIP-20 name of this token",
          "symbol_": "EIP-20 symbol of this token"
        }
      },
      "liquidateBorrow(address,address)": {
        "details": "Reverts upon any failure",
        "params": {
          "borrower": "The borrower of this cToken to be liquidated",
          "cTokenCollateral": "The market in which to seize collateral from the borrower"
        }
      },
      "mint()": {
        "details": "Reverts upon any failure"
      },
      "redeem(uint256)": {
        "details": "Accrues interest whether or not the operation succeeds, unless reverted",
        "params": {
          "redeemTokens": "The number of cTokens to redeem into underlying"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "redeemUnderlying(uint256)": {
        "details": "Accrues interest whether or not the operation succeeds, unless reverted",
        "params": {
          "redeemAmount": "The amount of underlying to redeem"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "repayBorrow()": {
        "details": "Reverts upon any failure"
      },
      "repayBorrowBehalf(address)": {
        "details": "Reverts upon any failure",
        "params": {
          "borrower": "the account with the debt being payed off"
        }
      },
      "seize(address,address,uint256)": {
        "details": "Will fail unless called by another cToken during the process of liquidation. Its absolutely critical to use msg.sender as the borrowed cToken and not a parameter.",
        "params": {
          "borrower": "The account having collateral seized",
          "liquidator": "The account receiving seized collateral",
          "seizeTokens": "The number of cTokens to seize"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "supplyRatePerBlock()": {
        "return": "The supply interest rate per block, scaled by 1e18"
      },
      "totalBorrowsCurrent()": {
        "return": "The total borrows with interest"
      },
      "transfer(address,uint256)": {
        "params": {
          "amount": "The number of tokens to transfer",
          "dst": "The address of the destination account"
        },
        "return": "Whether or not the transfer succeeded"
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "amount": "The number of tokens to transfer",
          "dst": "The address of the destination account",
          "src": "The address of the source account"
        },
        "return": "Whether or not the transfer succeeded"
      }
    },
    "title": "Compound's CEther Contract"
  },
  "userdoc": {
    "methods": {
      "_acceptAdmin()": {
        "notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
      },
      "_reduceReserves(uint256)": {
        "notice": "Accrues interest and reduces reserves by transferring to admin"
      },
      "_setComptroller(address)": {
        "notice": "Sets a new comptroller for the market"
      },
      "_setInterestRateModel(address)": {
        "notice": "accrues interest and updates the interest rate model using _setInterestRateModelFresh"
      },
      "_setPendingAdmin(address)": {
        "notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
      },
      "_setReserveFactor(uint256)": {
        "notice": "accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh"
      },
      "accrueInterest()": {
        "notice": "Applies accrued interest to total borrows and reserves"
      },
      "allowance(address,address)": {
        "notice": "Get the current allowance from `owner` for `spender`"
      },
      "approve(address,uint256)": {
        "notice": "Approve `spender` to transfer up to `amount` from `src`"
      },
      "balanceOf(address)": {
        "notice": "Get the token balance of the `owner`"
      },
      "balanceOfUnderlying(address)": {
        "notice": "Get the underlying balance of the `owner`"
      },
      "borrow(uint256)": {
        "notice": "Sender borrows assets from the protocol to their own address"
      },
      "borrowBalanceCurrent(address)": {
        "notice": "Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex"
      },
      "borrowBalanceStored(address)": {
        "notice": "Return the borrow balance of account based on stored data"
      },
      "borrowRatePerBlock()": {
        "notice": "Returns the current per-block borrow interest rate for this cToken"
      },
      "constructor": "Construct a new CEther money market",
      "exchangeRateCurrent()": {
        "notice": "Accrue interest then return the up-to-date exchange rate"
      },
      "exchangeRateStored()": {
        "notice": "Calculates the exchange rate from the underlying to the CToken"
      },
      "getAccountSnapshot(address)": {
        "notice": "Get a snapshot of the account's balances, and the cached exchange rate"
      },
      "getCash()": {
        "notice": "Get cash balance of this cToken in the underlying asset"
      },
      "initialize(address,address,uint256,string,string,uint8)": {
        "notice": "Initialize the money market"
      },
      "liquidateBorrow(address,address)": {
        "notice": "The sender liquidates the borrowers collateral. The collateral seized is transferred to the liquidator."
      },
      "mint()": {
        "notice": "Sender supplies assets into the market and receives cTokens in exchange"
      },
      "redeem(uint256)": {
        "notice": "Sender redeems cTokens in exchange for the underlying asset"
      },
      "redeemUnderlying(uint256)": {
        "notice": "Sender redeems cTokens in exchange for a specified amount of underlying asset"
      },
      "repayBorrow()": {
        "notice": "Sender repays their own borrow"
      },
      "repayBorrowBehalf(address)": {
        "notice": "Sender repays a borrow belonging to borrower"
      },
      "seize(address,address,uint256)": {
        "notice": "Transfers collateral tokens (this market) to the liquidator."
      },
      "supplyRatePerBlock()": {
        "notice": "Returns the current per-block supply interest rate for this cToken"
      },
      "totalBorrowsCurrent()": {
        "notice": "Returns the current total borrows plus accrued interest"
      },
      "transfer(address,uint256)": {
        "notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer `amount` tokens from `src` to `dst`"
      }
    },
    "notice": "CToken which wraps Ether"
  }
}